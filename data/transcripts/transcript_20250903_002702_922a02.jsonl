{"ts": "00:00", "speaker": "I", "text": "Können Sie kurz umreißen, wie Ihr Team in die Pilotphase von Atlas Mobile integriert ist?"}
{"ts": "03:15", "speaker": "E", "text": "Ja, gerne. Unser UX-Team ist von Tag eins in die Sprintplanung eingebunden, wir sitzen direkt mit dem Core-Dev-Team an einem virtuellen Board. Gerade in der Pilotphase ist es wichtig, dass wir unsere UX-Deliverables – wie interaktive Prototypen, Flow-Diagramme und Accessibility-Guides – synchron zu den Backend-Meilensteinen liefern. Das ist Teil der SLA-Vorgabe SLA-UX-04, die im Projekthandbuch P-ATL hinterlegt ist."}
{"ts": "07:02", "speaker": "I", "text": "Welche UX-spezifischen Deliverables haben Sie für diesen Meilenstein definiert?"}
{"ts": "10:18", "speaker": "E", "text": "Für den aktuellen Meilenstein M3 haben wir drei Kern-Deliverables: Erstens ein klickbarer Figma-Prototyp mit DS-ATLAS v2-Komponenten, zweitens ein aktualisierter Accessibility-Check nach WCAG 2.1 AA, und drittens einen Offline-Sync-Usability-Testbericht. Letzterer adressiert die SLA-Anforderung, dass sämtliche Kernfunktionen auch bei unterbrochener Verbindung in weniger als zwei Sekunden verfügbar sein müssen."}
{"ts": "14:40", "speaker": "I", "text": "Wie stellen Sie sicher, dass UX-Anforderungen mit den SLA-Zielen des Projekts abgestimmt sind?"}
{"ts": "18:05", "speaker": "E", "text": "Wir haben einen Abgleichprozess, der alle zwei Wochen läuft. Dabei mappen wir unsere UX-Stories gegen die SLA-Matrix in Confluence. Zum Beispiel: Die Response-Zeit für das Laden der Startseite ist in SLA-PERF-02 auf 1,5 Sekunden begrenzt. Wir testen das in unseren Prototypen mit Lighthouse und dokumentieren Abweichungen in Tickets wie UX-217."}
{"ts": "22:10", "speaker": "I", "text": "Wie nutzen Sie Feature Flags, um UI-Änderungen schrittweise auszurollen?"}
{"ts": "26:45", "speaker": "E", "text": "Wir setzen ein internes Modul namens FlagSmith-NOV ein. Damit können wir DS-ATLAS v2-Komponenten selektiv aktivieren. Zum Beispiel haben wir den neuen Offline-Sync-Indicator in einer Beta-Flag-Umgebung erst nur für 5% der Pilotnutzer aktiviert. So sehen wir in den Observability-Daten, ob es zu Usability- oder Performanceproblemen kommt, bevor wir den Flag auf 100% setzen."}
{"ts": "31:20", "speaker": "I", "text": "Gibt es Prozesse, um die Konsistenz des Designsystems während experimenteller Releases zu sichern?"}
{"ts": "35:05", "speaker": "E", "text": "Ja, wir haben ein wöchentliches DS-Review mit dem Design Ops Team. Dort prüfen wir alle Komponentenänderungen gegen die DS-ATLAS v2 Runbook-Einträge. Jede Abweichung muss in einem DS-Delta-Ticket dokumentiert und von zwei UX-Engineers abgenommen werden, bevor der Merge ins Hauptrepo erlaubt ist."}
{"ts": "39:50", "speaker": "I", "text": "Wie wird das Zusammenspiel zwischen DS-ATLAS v2 und der Offline-Sync-Logik getestet?"}
{"ts": "44:35", "speaker": "E", "text": "Wir nutzen hier ein Multi-Hop-Testsetup: Zuerst läuft ein UI-Regressionstest mit Percy, danach ein Offline-Scenario-Test mit unserem Mock-Netzwerktool NetDrop. So sehen wir, ob UI-Elemente aus DS-ATLAS v2 korrekt reagieren, wenn Sync-Events vom Offline-Manager kommen. Das ist besonders wichtig für die State-Indicator-Komponenten."}
{"ts": "49:20", "speaker": "I", "text": "Gab es Konflikte zwischen Barrierefreiheit und Performance-Anforderungen?"}
{"ts": "54:05", "speaker": "E", "text": "Ja, ein Beispiel: Unser Screenreader-Support für komplexe Tabellen erhöhte initial die Ladezeit um 0,8 Sekunden. Wir haben dann, entgegen einer Empfehlung aus Runbook ACC-02, Teile der ARIA-Attribute nur on-demand geladen. Das war ein Trade-off, aber so blieben wir innerhalb von SLA-PERF-02, ohne die Barrierefreiheit spürbar zu verschlechtern."}
{"ts": "59:00", "speaker": "I", "text": "Welche Risiken sehen Sie für den Rollout und wie dokumentieren Sie diese?"}
{"ts": "90:00", "speaker": "E", "text": "Das größte Risiko ist, dass Feature Flags im Produktionssystem versehentlich falsch gesetzt werden. Wir haben deshalb eine RFC-Serie RFC-ATL-FF-01 bis -03 erstellt, die einen Vier-Augen-Reviewprozess vorschreibt. Zusätzlich pflegen wir eine Risiko-Matrix in Jira, in der wir sowohl technische als auch UX-Risiken mit Eintrittswahrscheinlichkeiten und Impact klassifizieren."}
{"ts": "90:00", "speaker": "I", "text": "Könnten wir jetzt noch einmal konkret auf die Schnittstelle zum Nimbus Observability-System eingehen? Mich interessiert, wie Sie die Nutzungsdaten in Ihre UX-Optimierungen einfließen lassen."}
{"ts": "90:15", "speaker": "E", "text": "Ja, klar. Also wir binden die Metriken aus Nimbus direkt in unser UX-Dashboard ein. Das heißt, wir sehen quasi in Echtzeit die Ladezeiten pro Screen, Error-Rates bei Offline-Sync und, ähm, auch Interaktionsmuster. Diese Daten fließen wöchentlich in unser Sprint Planning, zusammen mit den Findings aus den Usability-Tests."}
{"ts": "90:42", "speaker": "I", "text": "Und wie stellen Sie sicher, dass die Daten aus Nimbus auch wirklich valide sind für UX-Entscheidungen und nicht nur für technische Performance?"}
{"ts": "90:55", "speaker": "E", "text": "Gute Frage. Wir korrelieren die Nimbus-Daten mit unseren qualitativen Feedbacks. Also, wenn wir sehen, dass die Time-to-Interactive steigt und gleichzeitig im Testpanel Beschwerden über Trägheit zunehmen, dann wissen wir: das ist ein echtes UX-Problem, nicht nur ein Ausreißer im Monitoring."}
{"ts": "91:18", "speaker": "I", "text": "Gab es dabei schon einmal einen Fall, wo die Observability-Daten Sie auf einen Accessibility-Engpass hingewiesen haben?"}
{"ts": "91:32", "speaker": "E", "text": "Ja, tatsächlich. Wir hatten vor zwei Sprints eine erhöhte Abbruchrate bei der VoiceOver-Navigation. Nimbus zeigte uns eine ungewöhnlich hohe Anzahl an 'focus lost'-Events innerhalb bestimmter Dialoge. Das hat uns veranlasst, den Screenreader-Flow zu überarbeiten, obwohl das im ursprünglichen Runbook nicht priorisiert war."}
{"ts": "91:58", "speaker": "I", "text": "Das klingt nach einem Fall, wo Sie bewusst von einer Vorgabe abgewichen sind. War das eine formelle RFC-Entscheidung?"}
{"ts": "92:12", "speaker": "E", "text": "Genau, wir haben dafür RFC-UX-147 eröffnet. Darin haben wir dokumentiert, dass wir gegen die Runbook-Priorisierung aus RNBK-UI-07 verstoßen, weil der Impact auf die Accessibility-SLA (99,5% erfolgreiche Interaktionen) zu groß war. Der Product Owner hat das abgenickt."}
{"ts": "92:38", "speaker": "I", "text": "Wie gehen Sie generell mit diesen Accessibility-SLAs um? Gibt es feste Messpunkte?"}
{"ts": "92:51", "speaker": "E", "text": "Ja, wir haben quartalsweise Audits, aber in der Pilotphase machen wir alle zwei Wochen einen Accessibility-Check mit automatisierten Tools und manuellen Screenreader-Tests. Die Ergebnisse landen im Ticket-Template ACC-CHECK, das wir für Atlas Mobile angepasst haben."}
{"ts": "93:14", "speaker": "I", "text": "Lassen Sie uns auch kurz auf die Abhängigkeit zur Aegis IAM Lösung schauen – beeinflusst die Authentifizierung das UX-Design?"}
{"ts": "93:28", "speaker": "E", "text": "Absolut. Aegis IAM hat z.B. in der Pilotphase eine neue MFA-Variante getestet. Wir mussten im DS-ATLAS v2 temporär eine alternative Button-Komponente einführen, die nur per Feature Flag 'auth_mfa_alt' aktiviert wird. Das war wichtig, um die UI-Konsistenz nicht für alle Nutzer zu brechen."}
{"ts": "93:55", "speaker": "I", "text": "Gab es dabei Performance-Trade-offs durch die zusätzlichen Authentifizierungs-UI-Elemente?"}
{"ts": "94:07", "speaker": "E", "text": "Minimal, ja. Die MFA-Dialoge laden zusätzliche Ressourcen, was die Time-to-Interactive um ca. 200ms verlängert hat. Wir haben das aber in Kauf genommen, weil die Sicherheitspolitik Vorrang hatte. Dokumentiert ist das in Ticket UX-PERF-212 mit einer Risikoabstufung 'niedrig'."}
{"ts": "94:31", "speaker": "I", "text": "Wie stellen Sie sicher, dass solche temporären UI-Elemente nach der Pilotphase wieder sauber entfernt werden?"}
{"ts": "94:44", "speaker": "E", "text": "Wir haben einen Cleanup-Runbook-Eintrag RBK-FLAGS-03. Darin steht, dass alle Feature Flags spätestens 30 Tage nach Pilotabschluss entweder in den Main Branch integriert oder gelöscht werden müssen. Für 'auth_mfa_alt' ist das bereits als Task im Release-Plan RPL-ATLAS-1.0 hinterlegt."}
{"ts": "98:00", "speaker": "I", "text": "Könnten Sie bitte noch einmal konkret schildern, wie die Observability-Daten aus Nimbus tatsächlich Ihren UX-Workflow beeinflussen?"}
{"ts": "98:10", "speaker": "E", "text": "Ja, also wir haben in Nimbus Dashboards, die nicht nur technische Metriken wie Ladezeiten anzeigen, sondern auch Event-basierte UX-Signale, z.B. Abbruchraten im Offline-Sync. Diese fließen über ein internes Alerting-Runbook UX-RB-07 in unsere täglichen Stand-ups ein."}
{"ts": "98:32", "speaker": "I", "text": "Das heißt, Sie reagieren auch innerhalb eines Sprints auf diese Signale?"}
{"ts": "98:36", "speaker": "E", "text": "Genau. Wenn wir sehen, dass zum Beispiel die Time-to-Interactive bei einem Feature-Flagged-UI über 3 Sekunden steigt, priorisieren wir sofort ein Refactoring-Ticket, oft mit der Kennung UXFIX-, unabhängig vom ursprünglichen Sprintplan."}
{"ts": "98:58", "speaker": "I", "text": "Gab es in der Pilotphase Fälle, wo diese Daten einen geplanten Rollout gestoppt haben?"}
{"ts": "99:03", "speaker": "E", "text": "Ja, etwa bei der 'Quick List'-Funktion. Wir hatten die per Feature Flag nur für 20% der Pilotnutzer aktiv. Nimbus zeigte signifikant höhere Fehlerraten bei der Offline-Speicherung, was gegen unsere SLA-Ziele verstieß. Daraufhin haben wir den Flag zurückgesetzt und erst nach Anpassung gemäß RFC-ATL-045 wieder aktiviert."}
{"ts": "99:28", "speaker": "I", "text": "Wie koordinieren Sie solche Rollback-Entscheidungen mit dem IAM-Team von Aegis?"}
{"ts": "99:33", "speaker": "E", "text": "Wir haben ein Schnittstellenprotokoll, das in Runbook IAM-UX-INT beschrieben ist. Da IAM die Nutzergruppen steuert, müssen Feature-Rollbacks auch dort gespiegelt werden, um inkonsistente UI-Zustände zwischen authentifizierten Sessions zu vermeiden."}
{"ts": "99:54", "speaker": "I", "text": "Interessant. Und wie fließen FinOps-Vorgaben in solche kurzfristigen UX-Änderungen ein?"}
{"ts": "99:59", "speaker": "E", "text": "FinOps aus Projekt Vesta gibt uns Budgetgrenzen für API-Aufrufe pro Nutzer. Wenn wir durch ein UX-Feature mehr Sync-Vorgänge auslösen, prüfen wir gegen das Limit. In zwei Fällen mussten wir die Sync-Frequenz reduzieren, was wir im Ticket UX-OPT-112 dokumentiert haben."}
{"ts": "100:22", "speaker": "I", "text": "Gab es hierbei Zielkonflikte mit der Barrierefreiheit?"}
{"ts": "100:26", "speaker": "E", "text": "Ja, leider. Ein Screenreader-freundlicheres Layout führte zu mehr Teil-Updates der Ansicht, was den Sync-Trigger erhöhte. Wir haben dann einen Workaround implementiert, bei dem bestimmte ARIA-Updates lokal gecached werden, bevor sie gesynct werden."}
{"ts": "100:47", "speaker": "I", "text": "Wie haben Sie diese Abweichung von den Cache-Richtlinien legitimiert?"}
{"ts": "100:51", "speaker": "E", "text": "Das war eine bewusste Abweichung von Runbook SYNC-CACHE-02. Wir haben dazu eine Ausnahme in RFC-ATL-052 verfasst, die das Risiko und die UX-Vorteile gegeneinander abwägt und vom Architekturboard absegnen lassen."}
{"ts": "101:12", "speaker": "I", "text": "Und zum Schluss: Welche offenen Risiken sehen Sie jetzt noch für den anstehenden Rollout?"}
{"ts": "101:16", "speaker": "E", "text": "Das größte Risiko ist, dass im Vollausbau die Feature Flags nicht sauber deaktiviert werden und es zu UI-Inkonsistenzen kommt. Wir haben das in Risk-Log RISK-ATL-09 eingetragen, mit Maßnahmen wie erweiterten Integrationstests und manuellen Gatekeeper-Checks vor dem endgültigen SLA-Abnahmefenster."}
{"ts": "114:00", "speaker": "I", "text": "Sie hatten vorhin kurz angedeutet, dass es bei der Integration der Offline-Sync-Logik unerwartete Nebeneffekte mit dem Designsystem gab. Können Sie das noch einmal detailliert schildern?"}
{"ts": "114:05", "speaker": "E", "text": "Ja, klar. Wir haben festgestellt, dass bestimmte Komponenten in DS-ATLAS v2 beim Fallback von Icons auf Textlabels anders gerendert haben, wenn der Sync-Status 'pending' war. Das hat dazu geführt, dass in den Feature-Flag-gestützten Experimenten UX-Inkonsistenzen auftraten."}
{"ts": "114:15", "speaker": "I", "text": "Haben Sie dafür im Runbook einen spezifischen Workaround definiert?"}
{"ts": "114:20", "speaker": "E", "text": "Ja, wir haben in Runbook-Eintrag UX-RB-094 festgehalten, dass bei aktivem Flag `ui.offlineFallback` ein zusätzlicher Snapshot-Test gegen die Atlas Mobile Offline-Komponenten gefahren werden muss, bevor der Merge erfolgt."}
{"ts": "114:30", "speaker": "I", "text": "Und hat das Auswirkungen auf Ihre SLAs, vor allem in Bezug auf die Reaktionszeiten bei UI-Bugs?"}
{"ts": "114:35", "speaker": "E", "text": "Minimal. Unser SLA für kritische visuelle Fehler in der Pilotphase liegt bei 48 Stunden. Durch die zusätzlichen Tests verlängert sich die QA um etwa 4 Stunden, was aber im Puffer liegt."}
{"ts": "114:44", "speaker": "I", "text": "Sie sprachen auch von einer Abhängigkeit zur Aegis IAM Lösung. Gab es da Verzögerungen, die Ihre UX-Tests beeinflusst haben?"}
{"ts": "114:50", "speaker": "E", "text": "Ja, der Multi-Faktor-Flow war in Build 1.3.7 nicht wie in der API-Doku beschrieben. Wir mussten eine temporäre Mock-Auth-Bridge einbauen, um die UX-Flows weiter zu testen. Das haben wir in Ticket P-ATL-321 dokumentiert."}
{"ts": "115:00", "speaker": "I", "text": "Wie haben Sie in dieser Situation die Observability-Daten aus Nimbus genutzt?"}
{"ts": "115:05", "speaker": "E", "text": "Wir haben Nutzer-Sessions mit fehlerhaften MFA-Flows getrackt und Heatmaps erzeugt, um zu sehen, ob Nutzer abbrechen oder alternative Navigation wählen. Das hat uns geholfen, die Mock-Lösung UX-seitig zu optimieren."}
{"ts": "115:15", "speaker": "I", "text": "Gab es Konflikte zwischen Barrierefreiheit und Performance hier?"}
{"ts": "115:20", "speaker": "E", "text": "Ein wenig. Die Screenreader-Events für MFA-Codes haben bei schwacher Verbindung die Renderzeit um bis zu 300 ms erhöht. Wir mussten im ARIA-Labeling eine asynchrone Lazy-Update-Strategie implementieren."}
{"ts": "115:30", "speaker": "I", "text": "Spannend. Haben Sie diese Strategie offiziell in einem RFC erfasst?"}
{"ts": "115:35", "speaker": "E", "text": "Ja, RFC-ATL-017 beschreibt das als 'Accessible Label Deferred Update Pattern'. Dort sind auch die Messwerte hinterlegt und ein Rollback-Plan, falls es zu Regressionen kommt."}
{"ts": "115:45", "speaker": "I", "text": "Letzte Frage: Welche Risiken sehen Sie aktuell für den Rollout auf Basis der letzten zwei Sprints?"}
{"ts": "115:50", "speaker": "E", "text": "Größtes Risiko ist, dass Feature Flags, die für UX-Experimente gedacht sind, versehentlich in die Produktion gelangen, ohne die Offlinesync-Regressionstests zu durchlaufen. Wir haben dafür ein Gatekeeping-Skript `fflag-guard.sh` eingeführt und in P-ATL-412 dokumentiert."}
{"ts": "116:00", "speaker": "I", "text": "Wir hatten vorhin kurz die Observability-Schnittstelle zu Nimbus angerissen. Können Sie bitte genauer beschreiben, wie diese Daten Ihre UX-Iterationen in der laufenden Pilotphase beeinflussen?"}
{"ts": "116:06", "speaker": "E", "text": "Ja, klar. Wir aggregieren aus Nimbus vor allem User Journey Traces und Screen Render Times. Diese fließen in unser internes Dashboard „UX-Metrics P-ATL“ ein, das wöchentlich in den Team-Review-Sessions diskutiert wird. So konnten wir z. B. die Ladezeit der Offline-Sync-Ansicht von 2,8 Sekunden auf unter 1,9 Sekunden reduzieren, nachdem wir bestimmte Asset-Ladeprozesse asynchronisiert haben."}
{"ts": "116:18", "speaker": "I", "text": "Gab es dabei auch Erkenntnisse, die Sie mit den Entwicklern der Aegis-IAM-Integration teilen mussten?"}
{"ts": "116:24", "speaker": "E", "text": "Definitiv. Die Traces zeigten, dass bei einer kalten App-Session die IAM-Authentifizierung knapp 40 % der gesamten Startzeit ausmacht. Wir haben das an das Aegis-Team weitergegeben, und gemeinsam in Ticket UX-3247 dokumentiert. Darin schlagen wir vor, das Preloading der Auth-Komponenten über einen Feature Flag zu testen."}
{"ts": "116:38", "speaker": "I", "text": "Wie haben Sie diese Erkenntnisse dann im Designsystem abgebildet?"}
{"ts": "116:44", "speaker": "E", "text": "Wir haben in DS-ATLAS v2 ein neues Pattern für den Splash-Screen definiert, der während der IAM-Initialisierung angezeigt wird. Das wurde als RFC-ATLAS-UX-19 festgehalten. Ziel war, die wahrgenommene Wartezeit zu reduzieren, ohne die Auth-Logik selbst zu verändern."}
{"ts": "116:56", "speaker": "I", "text": "Gab es bei der Umsetzung dieses Splash-Screens Zielkonflikte mit den Barrierefreiheitsanforderungen?"}
{"ts": "117:02", "speaker": "E", "text": "Ein bisschen, ja. Wir mussten sicherstellen, dass Screenreader sofort die relevanten Statusmeldungen vorlesen. Im Runbook RB-UX-ACC-05 ist eigentlich vorgesehen, dass bei Ladescreens keine redundanten Textausgaben erfolgen. Wir haben hier bewusst eine Ausnahme gemacht und das in einer Runbook-Abweichung dokumentiert, weil die Nutzerfeedbacks aus den Tests klar zeigten, dass dies für blinde Nutzer hilfreich ist."}
{"ts": "117:18", "speaker": "I", "text": "Wie haben Sie diese Abweichung gegenüber den anderen Stakeholdern gerechtfertigt?"}
{"ts": "117:24", "speaker": "E", "text": "Wir haben die Ergebnisse aus vier Remote-Usability-Sessions angeführt, die in unserem Research-Log RLOG-ATL-07 hinterlegt sind. Dort ist klar dokumentiert, dass die Testpersonen ohne die zusätzlichen Screenreader-Hinweise unsicher waren, ob die App hängt oder lädt."}
{"ts": "117:38", "speaker": "I", "text": "Gab es Performance-Einbußen durch diese zusätzlichen Accessibility-Elemente?"}
{"ts": "117:44", "speaker": "E", "text": "Minimal. Die Rendering-Zeit stieg um etwa 0,05 Sekunden, was innerhalb der in SLA-PATL-UX definierten Toleranz liegt. Wichtig war hier, dass wir es vorab mit der Observability-Pipeline verifiziert haben."}
{"ts": "117:54", "speaker": "I", "text": "Wenn Sie auf die Pilotphase zurückblicken: Welche UX-Entscheidung würden Sie als besonders kritisch für den bevorstehenden Rollout bezeichnen?"}
{"ts": "118:00", "speaker": "E", "text": "Die Entscheidung, experimentelle UI-Module über Feature Flags parallel zur Offline-Sync-Logik auszurollen. Das birgt das Risiko, dass im Rollout-Cluster unerwartete Interaktionen auftreten. Wir haben das Risiko in RFC-ATLAS-RISK-12 mit einer Mitigation-Strategie dokumentiert: gestaffeltes Ausrollen in 10 %-Schritten, kombiniert mit Echtzeit-Monitoring."}
{"ts": "118:14", "speaker": "I", "text": "Und wie stellen Sie sicher, dass diese Mitigation tatsächlich greift?"}
{"ts": "118:20", "speaker": "E", "text": "Wir haben im Runbook RB-ATL-DEP-03 eine Checkliste verankert, die vor jedem Flag-Inkrement abgearbeitet wird. Dazu gehören Smoke-Tests, Accessibility-Checks und ein Review der Observability-Dashboards. Erst wenn alle Punkte grün sind, wird hochskaliert."}
{"ts": "124:00", "speaker": "I", "text": "Sie hatten vorhin angedeutet, dass es bei der Offline-Sync-Logik und DS-ATLAS v2 eine spezielle Testreihe gab. Können Sie das bitte genauer ausführen?"}
{"ts": "124:15", "speaker": "E", "text": "Ja, wir haben im internen Testlauf T-ATL-0924 eine Serie von UI-Regressionstests gefahren, die gezielt die Sync-Zustände simulierten. Dabei haben wir in einer Staging-Umgebung mit aktivierten Feature Flags gearbeitet, um visuelle Artefakte bei langsamer Verbindung zu erkennen."}
{"ts": "124:42", "speaker": "I", "text": "Gab es dafür ein spezielles Runbook oder haben Sie improvisiert?"}
{"ts": "124:50", "speaker": "E", "text": "Wir haben auf Runbook RB-UX-14 zurückgegriffen, das Synchronisations-Edge-Cases definiert. Allerdings mussten wir zwei zusätzliche Schritte ergänzen – etwa ein manuelles Delay von 3 Sekunden zwischen den Flag-States, um ein Race Condition Szenario nachzustellen."}
{"ts": "125:20", "speaker": "I", "text": "Interessant. Wie wurde dabei die Konsistenz des Designsystems sichergestellt?"}
{"ts": "125:30", "speaker": "E", "text": "Wir hatten einen automatisierten DS-Validator im CI, der jede Änderung an den DS-ATLAS v2 Komponenten gegen die Style Tokens prüft. Zusätzlich haben wir in Jira Ticket ATL-UX-311 dokumentiert, dass bei abweichenden Farben während des Syncs ein automatischer Rollback erfolgen soll."}
{"ts": "125:58", "speaker": "I", "text": "Sie sprachen vorhin von Observability-Daten aus Nimbus – wie genau fließen diese in die UX-Entscheidungen ein?"}
{"ts": "126:10", "speaker": "E", "text": "Wir korrelieren die Latenz- und Error-Rate-Metriken direkt mit den UI-Event-Logs. Wenn z. B. ein Peak in der Error-Rate mit einem bestimmten Feature Flag zusammenfällt, priorisieren wir die UX-Optimierung in der nächsten Iteration."}
{"ts": "126:32", "speaker": "I", "text": "Gab es denn schon Fälle, wo Sie dadurch eine kritische Änderung zurückhalten mussten?"}
{"ts": "126:40", "speaker": "E", "text": "Ja, beim Flag 'offline_batch_render' haben wir den Rollout gestoppt, nachdem Nimbus-Daten einen Anstieg von 30% bei Render-Timeouts zeigten. Das ging als Incident INC-AT-552 ins System und wurde erst nach einem Patch wieder aktiviert."}
{"ts": "127:05", "speaker": "I", "text": "Und wie wurde das mit den FinOps-Vorgaben aus Vesta abgeglichen?"}
{"ts": "127:15", "speaker": "E", "text": "Die FinOps-Richtlinie verlangt, dass Feature Flags mit erhöhter Compute-Last nicht länger als zwei Wochen aktiv gehalten werden dürfen, wenn sie nicht produktiv sind. Deshalb haben wir im Fall 'offline_batch_render' gleich die Kostenprojektion in Vesta-Dashboard aktualisiert."}
{"ts": "127:38", "speaker": "I", "text": "Zum Schluss: Gab es in dieser Pilotphase eine bewusste Abweichung von einer Runbook-Empfehlung, die Sie für vertretbar hielten?"}
{"ts": "127:48", "speaker": "E", "text": "Ja, bei RB-A11Y-05, das strikte Farbkontraste vorschreibt, haben wir temporär für eine experimentelle Karte die Farbsättigung reduziert, um die Ladezeit zu verringern. Wir haben das in RFC-ATL-77 dokumentiert und mit einem klaren Ablaufdatum versehen."}
{"ts": "128:15", "speaker": "I", "text": "Welche Risiken sehen Sie für den Rollout, basierend auf diesen Erfahrungen?"}
{"ts": "128:25", "speaker": "E", "text": "Hauptsächlich, dass Feature Flag-Konfigurationen nicht sauber zwischen Staging und Produktion synchronisiert werden. Ein Mismatch könnte zu Inkonsistenzen bei der Offline-Sync-Darstellung führen. Wir haben deshalb Ticket RISK-ATL-09 eröffnet, mit Maßnahmen zur täglichen Flag-Synchronprüfung."}
{"ts": "132:00", "speaker": "I", "text": "Könnten Sie noch einmal genauer auf den Testprozess eingehen, den Sie für die Offline-Sync-Logik in Kombination mit DS-ATLAS v2 verwenden?"}
{"ts": "132:08", "speaker": "E", "text": "Ja, wir haben dafür ein spezielles Testprotokoll namens 'Sync-UI-Runbook v1.3'. Darin ist beschrieben, wie wir die Synchronisationszustände simulieren und gleichzeitig visuelle Regressionstests durchführen. Wir nutzen dafür ein internes Tool, das Feature Flags gezielt aktiviert oder deaktiviert, um unterschiedliche UI-Zustände in der Offline-Phase zu sehen."}
{"ts": "132:24", "speaker": "I", "text": "Und wie stellen Sie sicher, dass während dieser Tests die SLA-Ziele für Ladezeiten eingehalten werden?"}
{"ts": "132:31", "speaker": "E", "text": "Wir haben im SLA-Dokument SLA-ATL-Pilot-02 festgelegt, dass die initiale Ladezeit nach einer Offline-Phase unter 2,5 Sekunden bleiben muss. In den Tests messen wir mit einem internen Observability-Agent, der auch aus Nimbus stammt, und wir gleichen die Werte mit den Benchmarks aus dem Runbook ab."}
{"ts": "132:47", "speaker": "I", "text": "Gab es dabei schon Auffälligkeiten oder Grenzfälle?"}
{"ts": "132:52", "speaker": "E", "text": "Einmal, ja – bei einem Feature Flag, das eine neue Kartenkomponente aktiviert hat. Da hat die Rendering-Zeit die Schwelle knapp überschritten. Wir haben daraufhin einen Ticket-Eintrag (UX-ATL-456) erstellt und die Komponente in einem Hotfix optimiert, bevor wir das Flag breiter ausgerollt haben."}
{"ts": "133:08", "speaker": "I", "text": "Interessant. Wie gehen Sie vor, wenn solche Optimierungen im Konflikt mit Barrierefreiheits-Anforderungen stehen?"}
{"ts": "133:15", "speaker": "E", "text": "Das ist knifflig. In dem Fall prüfen wir die WCAG-2.1-Checks aus unserem Accessibility-Runbook. Wenn Performance-Gewinne nur durch Entfernen von z. B. ARIA-Labels möglich wären, lehnen wir das ab. Stattdessen suchen wir optimierte Coding-Patterns, die beide Ziele erfüllen."}
{"ts": "133:31", "speaker": "I", "text": "Wie dokumentieren Sie diese Abwägungen?"}
{"ts": "133:35", "speaker": "E", "text": "In sogenannten Decision Records (DRs). Für Atlas Mobile liegt das im Repo /docs/decisions, z. B. DR-ATL-009 beschreibt den Fall mit der Kartenkomponente, inklusive Performance-Metriken und Barrierefreiheits-Tests."}
{"ts": "133:50", "speaker": "I", "text": "Gab es bei diesen Entscheidungen auch Schnittstellen zu anderen Projekten, etwa Aegis IAM?"}
{"ts": "133:56", "speaker": "E", "text": "Ja, tatsächlich. Die Kartenkomponente nutzt Standortdaten, die nur nach IAM-Authentifizierung geladen werden. Wir mussten sicherstellen, dass der IAM-Login-Flow die Offline-Sync-Tests nicht verfälscht. Daher haben wir in den Testumgebungen einen Mock-IAM-Service aus dem Aegis-Projekt eingebunden."}
{"ts": "134:12", "speaker": "I", "text": "Wie fließen solche technischen Verflechtungen in Ihre Risikoabschätzungen ein?"}
{"ts": "134:18", "speaker": "E", "text": "Wir bewerten sie in den Risk Logs, konkret Risk-ATL-Table, Spalte 'Cross-Dependency'. Dort markieren wir Risiken mit hoher Abhängigkeit zu anderen Projekten in Rot. Das hilft, früh RFCs zu erstellen, wenn eine Änderung in Aegis oder Nimbus droht, unseren Flow zu beeinflussen."}
{"ts": "134:34", "speaker": "I", "text": "Und zuletzt – welche Lehre ziehen Sie aus diesen komplexen Abhängigkeiten für den anstehenden Rollout?"}
{"ts": "134:40", "speaker": "E", "text": "Dass wir Feature Flags noch granularer gestalten müssen, um bei Problemen gezielt Teile des UI zurückrollen zu können, ohne Kernfunktionen wie Offline-Sync oder IAM-Login zu blockieren. Das steht als Empfehlung auch in unserem Abschlussreport für die Pilotphase (Report-ATL-Pilot-vFinal)."}
{"ts": "136:00", "speaker": "I", "text": "Sie hatten ja vorhin die Schnittstelle zur Aegis IAM Lösung erwähnt. Mich würde interessieren, ob es in der Pilotphase konkrete Probleme mit der Authentifizierungs-UX gab?"}
{"ts": "136:10", "speaker": "E", "text": "Ja, tatsächlich. In Sprint 4 hatten wir einen Incident, Ticket UX-AT-44, bei dem der Login-Flow auf iOS durch einen Caching-Fehler im Token-Refresh verzögert wurde. Wir haben das gemeinsam mit dem IAM-Team behoben, indem wir den Refresh-Trigger im UI um 200ms verzögert haben, wie es in Runbook IAM-05 als Workaround dokumentiert ist."}
{"ts": "136:28", "speaker": "I", "text": "Spannend. Und wie haben Sie dabei die SLA-Ziele im Blick behalten?"}
{"ts": "136:35", "speaker": "E", "text": "Wir haben die UX-Ladezeit-Metrik, Ziel <1,2 Sekunden bis zur ersten Interaktion, als KPI in unser Observability-Dashboard eingebettet. Die Verzögerung im Refresh lag darunter, so dass wir SLA-konform blieben."}
{"ts": "136:50", "speaker": "I", "text": "Gab es dabei Abhängigkeiten zur Offline-Sync-Logik?"}
{"ts": "136:57", "speaker": "E", "text": "Ja, hier kam der Multi-Hop-Effekt: Der verzögerte Token-Refresh verhinderte zunächst den Start des Sync-Jobs. Das hätte zu Dateninkonsistenzen führen können. Wir haben im Testfall 'SYNC-UX-07' die Abhängigkeit zwischen IAM-Refresh und Sync init dokumentiert und gezielt geprüft."}
{"ts": "137:15", "speaker": "I", "text": "Und das haben Sie mit DS-ATLAS v2 getestet?"}
{"ts": "137:21", "speaker": "E", "text": "Genau. Wir haben die UI-Komponenten für den Sync-Status so gestaltet, dass sie Feature-Flag-gesteuert sind. So konnten wir in der Pilotgruppe B die neue Statusanzeige ausrollen, ohne das Risiko in allen Umgebungen zu tragen."}
{"ts": "137:38", "speaker": "I", "text": "Wie haben Sie sichergestellt, dass diese Änderungen barrierefrei sind?"}
{"ts": "137:45", "speaker": "E", "text": "Wir haben WCAG 2.1 AA als Standard, und für die Statusanzeige explizit ARIA-Live Regionen eingesetzt. Ein Accessibility-Test in Testlauf ACC-12 hat nachgewiesen, dass Screenreader den Statuswechsel korrekt ansagen."}
{"ts": "138:02", "speaker": "I", "text": "Gab es Zielkonflikte zwischen dieser Barrierefreiheit und der Performance?"}
{"ts": "138:08", "speaker": "E", "text": "Minimal. Die ARIA-Live Updates haben bei sehr langsamen Geräten zu 50-70ms zusätzlicher Rendering-Zeit geführt. Wir haben entschieden, das zu akzeptieren, weil die Accessibility-Vorteile überwiegen. Diese Abweichung ist in RFC-UX-19 dokumentiert."}
{"ts": "138:25", "speaker": "I", "text": "Gab es weitere bewusste Abweichungen von Runbooks in der Pilotphase?"}
{"ts": "138:31", "speaker": "E", "text": "Ja, bei der Farbpalette. Runbook DS-02 empfiehlt nur vordefinierte DS-ATLAS v2 Farben, aber wir haben temporär einen höheren Kontrastwert eingeführt, um die Lesbarkeit in direkter Sonneneinstrahlung zu verbessern. Das Risiko wurde als 'low' in Ticket UX-AT-59 bewertet."}
{"ts": "138:48", "speaker": "I", "text": "Wie dokumentieren Sie solche Risiken für den Rollout?"}
{"ts": "138:54", "speaker": "E", "text": "Wir pflegen ein zentrales Confluence-Board 'Atlas UX Risks' und verlinken dort alle relevanten Tickets und RFCs. Für den Rollout haben wir eine Tabelle mit Risikostufe, betroffenen Features, und empfohlenen Mitigationsmaßnahmen erstellt, zuletzt aktualisiert in Sprint 6."}
{"ts": "144:00", "speaker": "I", "text": "Könnten Sie bitte noch einmal genauer erklären, wie Sie die Observability-Daten aus Nimbus konkret in Ihre täglichen UX-Entscheidungen einfließen lassen?"}
{"ts": "144:05", "speaker": "E", "text": "Ja klar, wir haben ein Dashboard im internen Tool 'Nebula View', das direkt aus Nimbus-Streams gespeist wird. Dort sehen wir Heatmaps und Session-Replays, die wir mit den SLA-KPIs aus Ticket #UX-3248 verknüpfen. So erkennen wir zum Beispiel, wenn Ladezeiten in der Offline-Sync-Komponente über 2,5 Sekunden liegen und passen entsprechend das Design an."}
{"ts": "144:12", "speaker": "I", "text": "Das heißt, Sie korrelieren technische Metriken mit Nutzungsverhalten... wie gehen Sie damit um, wenn die Daten widersprüchlich sind?"}
{"ts": "144:16", "speaker": "E", "text": "Genau, das kommt vor. Wir haben in Runbook RB-UX-07 eine Heuristik: Bei Widersprüchen priorisieren wir qualitative Research-Ergebnisse, es sei denn, ein SLA wird verletzt. In so einem Fall stellen wir zuerst die technische Einhaltung sicher, bevor wir visuelle Anpassungen vornehmen."}
{"ts": "144:24", "speaker": "I", "text": "Interessant. Gab es in der Pilotphase ein Beispiel, bei dem Sie diese Heuristik anwenden mussten?"}
{"ts": "144:28", "speaker": "E", "text": "Ja, im April hatten wir ein Feature-Flag-Release für den neuen Sync-Statusindikator. Laut Nutzertests war er klar verständlich, aber die Telemetrie zeigte einen Performance-Drop. Wir haben dann kurzfristig ein Rollback per Flag gemacht, um die SLA 99,5% Responsiveness einzuhalten."}
{"ts": "144:36", "speaker": "I", "text": "Wie dokumentieren Sie solche Entscheidungen?"}
{"ts": "144:39", "speaker": "E", "text": "Wir legen dafür sogenannte Decision Records im Atlas Confluence an, verlinkt mit dem zugehörigen Jira-Ticket und einem Auszug aus dem Runbook. Beispiel: DR-ATL-2024-05 enthält die komplette Analyse inkl. Nimbus-Datenexport und Nutzerfeedback."}
{"ts": "144:46", "speaker": "I", "text": "Sie hatten vorhin FinOps aus Projekt Vesta erwähnt. Hat das Einfluss auf Ihr UX-Budget oder eher auf technische Entscheidungen?"}
{"ts": "144:50", "speaker": "E", "text": "Beides. FinOps gibt uns monatliche Kostenlimits pro aktiven MAU. Wenn wir z. B. im Designsystem DS-ATLAS v2 eine Animation einführen wollen, prüfen wir vorher, ob die zusätzlichen API-Calls oder Assets Cloudkosten erhöhen. Das steht so auch im FinOps-Guideline-Dokument FIN-UX-02."}
{"ts": "144:58", "speaker": "I", "text": "Gab es hier schon einmal einen Konflikt zwischen einem UX-Enhancement und den FinOps-Vorgaben?"}
{"ts": "145:02", "speaker": "E", "text": "Ja, beim geplanten Live-Search-Feature. UX-seitig wollten wir es sofort mit Autocomplete bereitstellen, aber die Query-Frequenz hätte die Kosten pro Nutzer verdreifacht. Wir haben daraufhin ein Caching-Modul implementiert und das Feature per Flag nur für 10% der Pilotnutzer aktiviert."}
{"ts": "145:10", "speaker": "I", "text": "Wie haben Sie das Risiko bewertet?"}
{"ts": "145:14", "speaker": "E", "text": "Das Risiko war doppelt: Finanziell und hinsichtlich Performance. Wir haben eine RFC erstellt (RFC-ATL-19) mit Szenarienanalyse, inklusive Worst-Case-Kosten und Latenzprofil. Der Lenkungsausschuss hat dann die gestufte Ausrollung genehmigt."}
{"ts": "145:21", "speaker": "I", "text": "Zum Abschluss: Welche Lessons Learned nehmen Sie aus diesen Trade-offs mit?"}
{"ts": "145:26", "speaker": "E", "text": "Eine wichtige Erkenntnis ist, dass Feature Flags nicht nur technische Sicherheit geben, sondern auch FinOps- und UX-Balance ermöglichen. Und dass wir dokumentierte Abweichungen vom Runbook brauchen – wie bei RB-UX-07 – um schnelle, aber nachvollziehbare Entscheidungen zu treffen."}
{"ts": "145:36", "speaker": "I", "text": "Im Hinblick auf die Lessons Learned – könnten Sie bitte ein Beispiel nennen, wo eine bewusste Abweichung vom Runbook UX-RB-12 dokumentiert wurde?"}
{"ts": "145:44", "speaker": "E", "text": "Ja, das war im Ticket UX-4778. Da ging es um die Priorisierung von Offline-Sync-Fehlerdialogen. Laut Runbook hätten wir einen generischen Dialog nutzen müssen, aber wir haben uns für eine spezifischere Fehlermeldung entschieden, um die Support-Calls zu reduzieren."}
{"ts": "145:56", "speaker": "I", "text": "Verstehe. Wie haben Sie diese Entscheidung abgesichert? Gab es ein RFC dazu?"}
{"ts": "146:02", "speaker": "E", "text": "Ja, RFC-ATLAS-UX-09. Wir haben darin die Abweichung beschrieben, Nutzertests aus Sprint 18 referenziert und die erwarteten Auswirkungen auf die SLA-Kennzahlen für First Contact Resolution aufgeführt."}
{"ts": "146:14", "speaker": "I", "text": "Gab es dabei Risiken in Bezug auf die Performance oder Security, die Sie abwägen mussten?"}
{"ts": "146:20", "speaker": "E", "text": "Minimal bei der Performance, weil die spezifischen Dialoge mehr Daten aus der lokalen Fehlerlogik ziehen. Security war unkritisch, da keine zusätzlichen sensiblen Daten angezeigt wurden."}
{"ts": "146:28", "speaker": "I", "text": "Wie haben Sie die Beobachtungen nach dem Ausrollen gemonitort?"}
{"ts": "146:34", "speaker": "E", "text": "Über das Observability-Dashboard aus Nimbus. Wir hatten ein spezielles Widget, das die Häufigkeit dieser Fehlermeldung und die nachfolgenden Supporttickets in Echtzeit visualisiert."}
{"ts": "146:44", "speaker": "I", "text": "Und wie lange lief diese Beobachtungsphase?"}
{"ts": "146:48", "speaker": "E", "text": "Vier Wochen in der Pilotgruppe. Danach haben wir die Daten in Confluence dokumentiert und das Runbook entsprechend ergänzt."}
{"ts": "146:56", "speaker": "I", "text": "Gab es Stakeholder, die gegen diese Anpassung waren?"}
{"ts": "147:00", "speaker": "E", "text": "Einige aus dem QA-Team, weil sie befürchteten, dass mehrere Varianten der Fehlermeldung zu Inkonsistenzen führen könnten."}
{"ts": "147:06", "speaker": "I", "text": "Wie haben Sie diese Bedenken adressiert?"}
{"ts": "147:10", "speaker": "E", "text": "Wir haben die UI-Texte in DS-ATLAS v2 hinterlegt und mit Feature Flags kontrolliert ausgerollt, sodass QA gezielt prüfen konnte."}
{"ts": "147:18", "speaker": "I", "text": "Also letztlich ein Kompromiss zwischen Flexibilität und Konsistenz?"}
{"ts": "147:22", "speaker": "E", "text": "Genau – und diese Vorgehensweise ist jetzt als Best Practice im Anhang von UX-RB-12 vermerkt."}
{"ts": "147:36", "speaker": "I", "text": "Wir hatten vorhin schon kurz die Offline-Sync-Logik angesprochen. Mich würde interessieren, wie Sie im Pilot konkret die Synchronisations-UI validiert haben."}
{"ts": "147:44", "speaker": "E", "text": "Ja, also wir haben dazu ein internes Testprotokoll angelegt, Ticket UX-ATL-311, in dem wir die Sync-Indikatoren gegen die Vorgaben aus Runbook RB-ATLAS-OFF-05 geprüft haben. Das beinhaltete sowohl Latenztests als auch Edge Cases wie Netzwechsel während des Syncs."}
{"ts": "147:58", "speaker": "I", "text": "Gab es dabei Abweichungen gegenüber dem Runbook?"}
{"ts": "148:02", "speaker": "E", "text": "Ja, minimal. Wir haben zum Beispiel die Farbe des Sync-Icons geändert, obwohl das Runbook einen Blauton spezifiziert. Grund war ein Accessibility-Befund aus der Research-Session vom 14. Mai, der eine bessere Unterscheidbarkeit für Nutzer mit Tritanopie nahelegte."}
{"ts": "148:16", "speaker": "I", "text": "Verstehe. Und wie haben Sie das mit dem Dev-Team abgestimmt?"}
{"ts": "148:21", "speaker": "E", "text": "Über ein Mini-RFC, RFC-ATL-UX-Color-07, das wir innerhalb von 24h im Slack-Channel #atlas-feature-flags reviewed haben. Die Entwicklerin hat dann den neuen Farbwert hinter ein eigenes Feature Flag gesetzt."}
{"ts": "148:34", "speaker": "I", "text": "Sie erwähnten Edge Cases beim Netzwechsel. Haben Sie da auch Interaktionen mit dem Aegis IAM beobachtet?"}
{"ts": "148:40", "speaker": "E", "text": "Ja, durch den Netzwechsel wurden in seltenen Fällen die Tokens neu angefordert, was die Sync-UI kurz in einen inkonsistenten Zustand versetzte. Wir haben das mit dem IAM-Team und den Nimbus-Logs korreliert, siehe Incident-Ref IN-ATL-042."}
{"ts": "148:55", "speaker": "I", "text": "Und wie flossen diese Findings in die FinOps-Überlegungen ein?"}
{"ts": "149:01", "speaker": "E", "text": "Die Token-Neuanforderungen erhöhen den Traffic zu unseren Auth-Servern. Das FinOps-Team hat in Vesta einen Alert gesetzt, um bei Überschreitung von 5% zusätzlichem Traffic pro Stunde zu warnen. Unsere UX-Anpassung zielt darauf, die unnötigen Requests zu vermeiden."}
{"ts": "149:15", "speaker": "I", "text": "Gab es einen Moment, wo Sie zwischen Performance und Barrierefreiheit abwägen mussten?"}
{"ts": "149:20", "speaker": "E", "text": "Ja, das war beim Animationsschema für den Offline-Banner. Eine flüssige Animation war visuell ansprechend, erhöhte aber CPU-Last um 8%. Wir haben uns für eine statische, aber kontrastreiche Darstellung entschieden, dokumentiert in Decision Log DL-ATL-UX-12."}
{"ts": "149:34", "speaker": "I", "text": "Wie reagieren Sie, wenn solche Entscheidungen den Go-Live gefährden könnten?"}
{"ts": "149:39", "speaker": "E", "text": "Wir haben dafür ein Risk Register, in dem UX-Risiken ab Schweregrad 'mittel' erfasst werden. Das fließt in das wöchentliche Steering-Meeting ein. Bei potenzieller Gefährdung priorisieren wir mit dem PM und führen ggf. einen Hotfix-Flag ein."}
{"ts": "149:52", "speaker": "I", "text": "Zum Abschluss: Gibt es Lessons Learned aus der Pilotphase, die Sie unbedingt ins nächste Release mitnehmen?"}
{"ts": "149:58", "speaker": "E", "text": "Ja, vor allem die frühe Einbindung des Accessibility-Checks vor dem UI-Polishing. Außerdem die enge Verzahnung mit Observability, um UX-Anomalien direkt im Telemetrie-Dashboard sichtbar zu machen. Das spart uns im späteren Verlauf sehr viel Troubleshooting."}
{"ts": "152:00", "speaker": "I", "text": "Sie hatten vorhin erwähnt, dass Sie beim Offline-Sync spezielle Heuristiken nutzen. Können Sie das bitte noch etwas ausführen, gerade im Kontext der Pilotphase?"}
{"ts": "152:05", "speaker": "E", "text": "Ja, klar. Wir haben im Runbook RB-ATL-07 definiert, dass wir bei instabiler Verbindung zunächst nur kritische UI-Elemente synchronisieren. Das basiert auf der Erkenntnis aus Ticket UX-1432, dass Nutzer bei teilweiser Aktualisierung besser zurechtkommen, als wenn die gesamte Oberfläche blockiert."}
{"ts": "152:12", "speaker": "I", "text": "Und wie wird das technisch umgesetzt?"}
{"ts": "152:16", "speaker": "E", "text": "Wir setzen im Service-Layer sogenannte Sync-Scopes ein, die via Feature Flag gesteuert werden. So können wir in der Pilotphase per Remote Config umschalten, ob z. B. Bilder offline nachgeladen werden oder nicht."}
{"ts": "152:22", "speaker": "I", "text": "Gab es dabei Abhängigkeiten zu anderen Projekten, etwa Aegis IAM?"}
{"ts": "152:26", "speaker": "E", "text": "Ja, Multi-Hop: Der Auth-Token aus Aegis IAM bestimmt, welche Datenbereiche ein Nutzer im Offline-Modus überhaupt sehen darf. Das mussten wir im Sync-Algorithmus berücksichtigen, sonst hätten wir potenziell unautorisierte Inhalte zwischengespeichert."}
{"ts": "152:33", "speaker": "I", "text": "Verstanden. Und wie prüfen Sie solche komplexen Abhängigkeiten?"}
{"ts": "152:37", "speaker": "E", "text": "Wir fahren wöchentliche Cross-System-Tests. Im Observability-Tool Nimbus filtern wir Logs gezielt nach Feature-Flag-Varianten und Auth-Scopes. Das ist nicht im offiziellen SLA-Dokument, aber in unserem internen QA-Playbook verankert."}
{"ts": "152:45", "speaker": "I", "text": "Kommen wir zu den Risiken. In welchen Fällen mussten Sie bewusst von Runbooks abweichen?"}
{"ts": "152:49", "speaker": "E", "text": "Ein Beispiel: Runbook RB-ATL-03 schreibt vor, dass Accessibility-Tests vor jedem Release vollständig sein müssen. Für Build 0.9.12 haben wir das zugunsten eines Performance-Fixes verschoben, dokumentiert in RFC-ATL-22 mit einer Risikoanalyse, dass nur 5 % der Testfälle betroffen sind."}
{"ts": "152:56", "speaker": "I", "text": "Wie haben Sie diese Entscheidung intern kommuniziert?"}
{"ts": "153:00", "speaker": "E", "text": "Über unser wöchentliches Pilot-Review und einen Eintrag im Confluence-Board 'Atlas Mobile Risks'. Wir markieren solche Abweichungen mit einem roten Label 'Runbook Exception'."}
{"ts": "153:06", "speaker": "I", "text": "Gibt es aus Ihrer Sicht noch offene Risiken vor dem Rollout?"}
{"ts": "153:10", "speaker": "E", "text": "Ja, zwei: Erstens die Integration des FinOps-Budgets aus Vesta in die DS-ATLAS-Komponentenbibliothek. Zweitens die Gefahr, dass Feature-Flag-Konfigurationen in der Live-Umgebung nicht sauber synchronisiert werden. Beides ist in Ticket RISK-ATL-09 hinterlegt."}
{"ts": "153:18", "speaker": "I", "text": "Wie mitigieren Sie das zweite Risiko konkret?"}
{"ts": "153:22", "speaker": "E", "text": "Wir haben ein Pre-Flight-Checkskript entwickelt, das vor jedem Flag-Update prüft, ob alle Clients den gleichen Schema-Stand haben. Das Skript ist noch experimentell, aber schon in zwei Staging-Deployments erfolgreich gelaufen."}
{"ts": "153:36", "speaker": "I", "text": "Bevor wir zu den Lessons Learned kommen, können Sie schildern, wie Sie den Abgleich zwischen DS-ATLAS v2 und der Offline-Sync-Engine aktuell organisieren?"}
{"ts": "153:40", "speaker": "E", "text": "Ja, wir haben im letzten Sprint ein internes Testprotokoll eingeführt, das in unserem QA-Runbook UX-07 beschrieben ist. Es definiert, wie UI-Komponenten unter Feature Flag 'sync-lite' mit der Delta-Sync-Logik validiert werden, um Rendering-Fehler bei schwacher Netzverbindung zu verhindern."}
{"ts": "153:46", "speaker": "I", "text": "Und wird dieses Protokoll auch automatisch in der CI/CD-Pipeline getriggert?"}
{"ts": "153:50", "speaker": "E", "text": "Genau, wir haben in der YAML-Konfiguration einen Job 'ux_offline_validation' ergänzt, der bei jedem Merge in den Pilot-Branch läuft. Das Ticket OPS-2123 dokumentiert die Einführung, inkl. Testmatrizen für iOS und Android."}
{"ts": "153:56", "speaker": "I", "text": "Sie hatten vorhin erwähnt, dass Observability-Daten aus Nimbus in Ihre Entscheidungen einfließen. Können Sie ein Beispiel nennen, wo dies konkret zu einer Designanpassung führte?"}
{"ts": "154:02", "speaker": "E", "text": "Ja, wir sahen im Nimbus-Dashboard eine Latenzspitze beim Laden der Kartenansicht im Sync-Fall. Das hat uns veranlasst, die Kartenkachel-Komponente zu vereinfachen und asynchrone Lazy-Loads einzuführen. Diese Änderung wurde zunächst hinter einem Feature Flag 'map-lite' getestet."}
{"ts": "154:08", "speaker": "I", "text": "Gab es einen Zielwert in den SLA-Kriterien, den Sie damit erreichen wollten?"}
{"ts": "154:12", "speaker": "E", "text": "Ja, laut SLA-Dokument P-ATL-SLA-v1.1 muss die Kartenansicht innerhalb von 2,5 Sekunden rendern. Nach der Anpassung lagen wir im Mittel bei 2,1 Sekunden, auch unter 3G-Bedingungen."}
{"ts": "154:18", "speaker": "I", "text": "Wie haben Sie sichergestellt, dass Accessibility-Standards bei diesen Optimierungen nicht verloren gingen?"}
{"ts": "154:22", "speaker": "E", "text": "Wir haben in den Runbook-Abschnitt 'A11y-Checks' explizit Prüfungen für kontraststarke Map-Marker ergänzt und mit Screenreader-Skripten gegengetestet. Das war im RFC-4829 als verbindliche Abnahmebedingung vermerkt."}
{"ts": "154:28", "speaker": "I", "text": "Gab es dabei Zielkonflikte zwischen Performance und Barrierefreiheit?"}
{"ts": "154:32", "speaker": "E", "text": "Teilweise, ja. Größere Marker mit mehr Farbkontrast erhöhen die Texturgröße und damit den Speicherbedarf. Wir haben im Trade-off-Dokument TRD-17 festgehalten, dass wir lieber minimale Performance-Einbußen akzeptieren, um WCAG 2.1 AA zu erfüllen."}
{"ts": "154:38", "speaker": "I", "text": "Wie reagieren Sie, wenn ein solcher Trade-off den FinOps-Vorgaben widerspricht?"}
{"ts": "154:42", "speaker": "E", "text": "Dann greifen wir auf das interne Eskalationsschema zurück, bei dem UX, DevOps und FinOps gemeinsam eine Kosten-Nutzen-Bewertung erstellen. Für Atlas Mobile haben wir das bei MAP-512 gemacht, um die zusätzlichen Rendering-Kosten zu rechtfertigen."}
{"ts": "154:48", "speaker": "I", "text": "Wenn Sie auf die Pilotphase zurückblicken, welche dieser Entscheidungen würden Sie als kritisch für den Rollout einstufen?"}
{"ts": "154:52", "speaker": "E", "text": "Definitiv die Entscheidung, die Offline-Kartenansicht hinter einem Feature Flag zu belassen, bis wir belastbare Daten aus drei Regionen haben. Das Risiko, ohne diese Daten live zu gehen, wurde in RISK-ATL-09 dokumentiert und ins Go/No-Go-Meeting eingebracht."}
{"ts": "155:06", "speaker": "I", "text": "Sie hatten ja im letzten Teil erwähnt, dass DS-ATLAS v2 in Kombination mit Feature Flags ausgerollt wird. Mich würde interessieren: wie gehen Sie konkret mit der Synchronisation dieser Flags in der Offline-Sync-Logik um?"}
{"ts": "155:14", "speaker": "E", "text": "Ja, also wir haben dafür einen Abgleichsmechanismus im Sync-Worker, der auf Client-Seite die Feature Flags aus einer lokal gecachten Snapshot-Datei liest. Sobald der Nutzer wieder online ist, wird das Flag-Set gegen die Atlas-Config-API validiert. Das ist im Runbook RB-ATL-FF-042 dokumentiert."}
{"ts": "155:28", "speaker": "I", "text": "Spannend. Gab es da schon einmal Konflikte, wenn ein Flag während einer Offline-Session geändert wurde?"}
{"ts": "155:35", "speaker": "E", "text": "Ja, vereinzelt. Wir hatten z. B. Ticket UX-ATL-317, wo ein User eine neue Kartenansicht sah, die serverseitig bereits wieder deaktiviert war. Wir lösen das, indem wir beim Re-Sync ein 'Flag-Reconciliation'-Event triggern, das UI-Komponenten neu rendert."}
{"ts": "155:49", "speaker": "I", "text": "Und wie verknüpfen Sie das mit den SLA-Zielen?"}
{"ts": "155:54", "speaker": "E", "text": "Unsere SLA für Feature-Toggle-Propagation liegt bei maximal 90 Sekunden nach Reconnect. Das überwachen wir mit einem Observability-Hook aus dem Nimbus-Projekt, der im Hintergrund die Zeit bis zur Aktualisierung misst."}
{"ts": "156:08", "speaker": "I", "text": "Das heißt, da ist auch eine Schnittstelle zwischen Atlas Mobile und Nimbus aktiv?"}
{"ts": "156:13", "speaker": "E", "text": "Genau. Nimbus sendet Metriken ins zentrale UX-Dashboard. Darüber erkennen wir auch, ob eine UI-Änderung negative Effekte auf Ladezeiten hat – das spielt in die Performance-vs.-Accessibility-Abwägung hinein."}
{"ts": "156:27", "speaker": "I", "text": "Können Sie ein Beispiel für so eine Abwägung geben?"}
{"ts": "156:32", "speaker": "E", "text": "Klar. In RFC-ATL-ACC-009 haben wir festgehalten, dass wir bei Screenreader-Navigation zusätzliche Landmarken eingebaut haben. Das erhöhte initiale Rendering um ca. 120 ms. Laut SLA war das noch im grünen Bereich, aber wir haben gleichzeitig ein Lazy-Loading für sekundäre Elemente implementiert."}
{"ts": "156:48", "speaker": "I", "text": "Gab es dabei Diskussionen mit dem Performance-Team?"}
{"ts": "156:52", "speaker": "E", "text": "Ja, durchaus. Das Performance-Team hat auf Basis der FinOps-Vorgaben aus Vesta argumentiert, dass jede Millisekunde auf Millionen von Sessions Kosten verursacht. Wir haben dann gemeinsam in einem Cross-Project-Meeting den Kompromiss erarbeitet."}
{"ts": "157:07", "speaker": "I", "text": "Inwiefern fließen IAM-Aspekte in diese UX-Entscheidungen ein?"}
{"ts": "157:12", "speaker": "E", "text": "Über Aegis IAM binden wir kontextabhängige UI-Elemente ein. Zum Beispiel werden bestimmte Buttons nur angezeigt, wenn das IAM-Token entsprechende Claims enthält. Das beeinflusst das Design, weil wir Platzhalter einplanen müssen, um Layout-Sprünge zu vermeiden."}
{"ts": "157:27", "speaker": "I", "text": "Zum Abschluss noch eine Frage zu Risiken: welche sehen Sie aktuell für den Rollout?"}
{"ts": "157:33", "speaker": "E", "text": "Das größte Risiko ist meiner Ansicht nach ein inkonsistenter Flag-Zustand bei gleichzeitiger Offline-Nutzung und App-Update. Wir haben das in Risk-Log-Eintrag RL-ATL-055 dokumentiert und einen Fallback-Mechanismus spezifiziert, der in RB-ATL-SYNC-021 beschrieben ist."}
{"ts": "160:06", "speaker": "I", "text": "Wir waren zuletzt bei den Schnittstellen zu anderen Projekten stehen geblieben. Können Sie bitte genauer erklären, wie das Atlas Mobile Team Observability-Daten aus Nimbus in konkrete UX-Iterationen übersetzt?"}
{"ts": "160:12", "speaker": "E", "text": "Ja, klar. Wir haben ein wöchentliches Auswertungsfenster, bei dem die Telemetriedaten aus Nimbus in unser internes Dashboard AT-UX-Metrics importiert werden. Dort werden Heatmaps und Error-Rates für die wichtigsten Nutzerflows generiert. Diese Insights fließen direkt in unsere Design-Stand-ups, sodass wir z. B. bei erhöhten Fehlerraten im Offline-Sync Screen sofort Hypothesen bilden und in den nächsten Feature-Flagged Release einpflegen."}
{"ts": "160:25", "speaker": "I", "text": "Und wie wird das mit den SLA-Zielen verknüpft?"}
{"ts": "160:30", "speaker": "E", "text": "Wir haben im SLA für P-ATL u. a. ein Ziel von max. 300 ms Reaktionszeit für Kerninteraktionen. Nimbus-Daten werden automatisch gegen diese Schwelle geprüft. Weicht ein Wert ab, erstellt unser Observability-Bot ein Ticket im UX-Backlog – intern mit Tag SLA-Breach – und verweist auf das Runbook RB-UX-07, das die Sofortmaßnahmen beschreibt."}
{"ts": "160:44", "speaker": "I", "text": "Gab es schon Fälle, in denen Sie gegen das Runbook vorgegangen sind?"}
{"ts": "160:49", "speaker": "E", "text": "Einmal, ja. Ticket UX-2345 im Februar: Die Daten zeigten eine kurze Latenzspitze, aber wir wussten aus Nutzerinterviews, dass der betroffene Workflow selten genutzt wird. Statt sofort zu optimieren, haben wir den Fix in einen regulären Sprint eingeplant, um Entwicklungsressourcen zu schonen. Das haben wir in RFC-ATL-19 dokumentiert und mit dem SLA-Owner abgestimmt."}
{"ts": "161:02", "speaker": "I", "text": "Verstehe. Wie wirkt sich das FinOps-Programm Vesta konkret auf Designentscheidungen aus?"}
{"ts": "161:07", "speaker": "E", "text": "FinOps-Vorgaben fließen bei uns vor allem in die Entscheidung ein, ob ein Feature server- oder clientseitig gerendert wird. Rendering am Client spart Cloud-Kosten, kann aber bei schwachen Geräten zu Performance-Einbußen führen. Wir haben deshalb im DS-ATLAS v2 Performance-Guidelines ergänzt, die auch im Vesta-Wiki verlinkt sind."}
{"ts": "161:20", "speaker": "I", "text": "Gab es dabei Zielkonflikte mit Accessibility?"}
{"ts": "161:24", "speaker": "E", "text": "Ja, insbesondere bei ARIA-Live-Regionen für Screenreader. Clientseitiges Rendering verzögert manchmal die korrekte Ansage. In Ticket ACC-452 haben wir das analysiert und entschieden, für kritische Inhalte serverseitig zu rendern, auch wenn das geringfügig höhere Kosten bedeutet."}
{"ts": "161:37", "speaker": "I", "text": "Noch einmal zu den Feature Flags: Wie stellen Sie sicher, dass ein schrittweiser Rollout nicht zu Inkonsistenzen im Design führt?"}
{"ts": "161:42", "speaker": "E", "text": "Wir nutzen ein internes Tool namens FlagViz, das pro aktiven Flag visuell anzeigt, welche Komponenten in DS-ATLAS v2 betroffen sind. Bevor ein Flag live geht, prüft das QA-Team gegen das Style-Regression-Runbook RB-DS-11. Das hat uns schon mehrfach vor fragmentierten UI-Zuständen bewahrt."}
{"ts": "161:55", "speaker": "I", "text": "Und wie testen Sie das Zusammenspiel mit der Offline-Sync-Logik?"}
{"ts": "162:00", "speaker": "E", "text": "Wir haben simulierte Netzwerkszenarien in unserem CI, basierend auf Szenario-Skripten aus Runbook RB-SYNC-03. Flags, die UI-Änderungen betreffen, werden unter 3G, Edge und Offline getestet. Dabei achten wir auf visuelle Konsistenz und ob die Sync-Indikatoren korrekt animieren."}
{"ts": "162:13", "speaker": "I", "text": "Abschließend: Welche Risiken sehen Sie jetzt für den Rollout nach der Pilotphase?"}
{"ts": "162:18", "speaker": "E", "text": "Das größte Risiko ist die gleichzeitige Aktivierung mehrerer Flags, die sich gegenseitig beeinflussen. Wir haben das im Risk-Register RR-ATL-05 erfasst und die Maßnahme definiert, Flags nur sequentiell zu aktivieren. Außerdem besteht ein mittleres Risiko, dass Offline-Sync unter iOS 14-Geräten nicht vollständig stabil läuft; dafür gibt es ein Monitoring-Playbook PB-ATL-02, das beim Rollout aktiviert wird."}
{"ts": "161:30", "speaker": "I", "text": "Lassen Sie uns noch einmal auf die Schnittstellen zum Aegis IAM zurückkommen: Gab es in den letzten zwei Sprints Änderungen, die die UX direkt beeinflusst haben?"}
{"ts": "161:43", "speaker": "E", "text": "Ja, wir haben ein neues Scope-basiertes Permission-Modell integriert, das in Ticket UX-453 dokumentiert ist. Das erforderte Anpassungen an den Onboarding-Screens, weil wir jetzt Rollen dynamisch aus dem IAM laden. Laut Runbook RB-IAM-07 mussten wir zudem die Ladezeit unter 1,2 Sekunden halten, was das Layout beeinflusst hat."}
{"ts": "161:59", "speaker": "I", "text": "Und wie haben Sie diese Performance-Anforderung im Design überprüft?"}
{"ts": "162:05", "speaker": "E", "text": "Wir haben in unserem Testlab einen Mock des IAM-Endpunkts eingesetzt und mit Lighthouse und unserem internen Tool UX-Metrics v4 gemessen. Außerdem gab es ein Observability-Dashboard in Nimbus, das die Latenz in Echtzeit zeigt, sodass wir bei Überschreitungen unmittelbar iterieren konnten."}
{"ts": "162:22", "speaker": "I", "text": "Sie erwähnten Nimbus – konnten Sie aus den Daten konkrete UI-Anpassungen ableiten?"}
{"ts": "162:28", "speaker": "E", "text": "Absolut. Wir haben gesehen, dass die Sync-Dauer bei schlechter Verbindung überproportional lange den Ladeindikator zeigte. Also haben wir den Offline-Mode-Indikator, der in DS-ATLAS v2 als sekundärer State definiert ist, prominenter platziert und die Animation nach RFC-ATL-22 von 1,5 auf 0,8 Sekunden verkürzt, um wahrgenommene Wartezeit zu reduzieren."}
{"ts": "162:49", "speaker": "I", "text": "Gab es dabei Konflikte mit den Accessibility-Vorgaben?"}
{"ts": "162:54", "speaker": "E", "text": "Ein kleiner. Die kürzere Animation durfte laut WCAG-Richtlinie nicht unter 0,7 Sekunden fallen, um Nutzer mit vestibulären Einschränkungen nicht zu beeinträchtigen. Wir haben deshalb im Code einen Flag `reduceMotion` gesetzt, der über Feature Flag FF-ACC-03 gesteuert wird."}
{"ts": "163:12", "speaker": "I", "text": "Wie binden Sie solche Flags in Ihre Release-Pipeline ein?"}
{"ts": "163:18", "speaker": "E", "text": "Die Flags liegen im Config-Repo `atlas-config`, werden über unser internes Tool FlagSmithy versioniert und pro Environment gesetzt. Für den Pilot haben wir ein staged rollout im YAML-File definiert, der in den CI-Jobs validiert wird. Das reduziert das Risiko, dass inkonsistente UI-Zustände in die Produktion gelangen."}
{"ts": "163:37", "speaker": "I", "text": "Und wie sieht die Abstimmung mit den FinOps-Vorgaben aus Vesta aus, gerade in Bezug auf solche Experimente?"}
{"ts": "163:43", "speaker": "E", "text": "Wir müssen für jedes Feature Flag über 14 Tage hinweg den Einfluss auf API-Calls und damit verbundene Kosten tracken. In Ticket FIN-UX-17 haben wir z. B. dokumentiert, dass der neue Sync-Indikator 4 % mehr Polling verursacht hat. Das war ein Trade-off, den wir mit einem abgestuften Polling-Intervall gelöst haben."}
{"ts": "164:04", "speaker": "I", "text": "Würden Sie sagen, dass solche Kostenmetriken Ihre Designentscheidungen stark beeinflussen?"}
{"ts": "164:10", "speaker": "E", "text": "Ja, zunehmend. Früher war es primär Nutzererlebnis, jetzt ist es ein Gleichgewicht aus Experience, Performance und Betriebskosten. In RFC-UX-09 haben wir das als 'Triple Constraint' festgehalten. Jede Abweichung muss in der wöchentlichen DesignOps-Runde begründet werden."}
{"ts": "164:29", "speaker": "I", "text": "Zum Abschluss: Gibt es für den Rollout noch offene Risiken aus UX-Sicht?"}
{"ts": "164:35", "speaker": "E", "text": "Ja, ein zentrales Risiko ist die Konsistenz des DS-ATLAS v2 bei parallelen Feature-Entwicklungen. Wenn zwei Teams gleichzeitig Komponenten erweitern, kann es zu Divergenzen kommen, wie wir bei Incident UX-INC-12 gesehen haben. Wir dokumentieren solche Fälle jetzt in einem dedizierten Risiko-Log und verknüpfen sie mit den entsprechenden Jira-Tickets, um beim Go-Live gezielt zu prüfen."}
{"ts": "163:30", "speaker": "I", "text": "Lassen Sie uns nochmal auf die Schnittstellen eingehen: Wie haben Sie konkret sichergestellt, dass die Observability-Daten aus Nimbus auch in Ihrer UX-Analyse sichtbar sind?"}
{"ts": "163:34", "speaker": "E", "text": "Wir haben dazu ein internes Dashboard-Template in Kibrix erstellt, das die KPIs aus Nimbus, wie z. B. Latenz pro API-Call, direkt mit den Heatmaps aus den UX-Sessions verknüpft. Das ist im Runbook RB-ATL-OBS-07 beschrieben, und das Team checkt das wöchentlich."}
{"ts": "163:40", "speaker": "I", "text": "Das klingt nach einem Multi-Hop-Setup zwischen Backend und UX-Tooling. Gab es technische Stolpersteine?"}
{"ts": "163:45", "speaker": "E", "text": "Ja, vor allem die Synchronisierung der Zeitstempel war tricky. Nimbus loggt in UTC, unser Session-Recorder in lokaler Zeit. Wir mussten einen Middleware-Service einziehen, der das normalisiert. Das war im Ticket ATL-DEV-558 dokumentiert."}
{"ts": "163:51", "speaker": "I", "text": "Und wie spielt hier die Aegis IAM Integration rein?"}
{"ts": "163:55", "speaker": "E", "text": "Aegis liefert uns User-IDs, die wir pseudonymisiert in den UX-Daten speichern. Ohne diese Verknüpfung könnten wir keine Unterschiede zwischen Rollenprofilen auswerten, z. B. Admin vs. Field User."}
{"ts": "164:01", "speaker": "I", "text": "Gab es in Bezug auf die SLA-Vorgaben aus FinOps-Vesta Anpassungen im Design?"}
{"ts": "164:06", "speaker": "E", "text": "Ja, FinOps hat ein klares Budget-Limit für API Calls pro Nutzer vorgegeben. Wir mussten infolgedessen das Auto-Sync-Intervall im Offline-Modus von 2 auf 5 Minuten erhöhen, um die Cloud-Kosten im Rahmen zu halten. Das stand so nicht im ursprünglichen UX-Konzept."}
{"ts": "164:13", "speaker": "I", "text": "Das ist ja ein klassischer Trade-off zwischen Performance und Kosten. Wie haben Sie das kommuniziert?"}
{"ts": "164:17", "speaker": "E", "text": "Wir haben dazu ein RFC-Dokument erstellt, RFC-ATL-093, in dem wir die möglichen Auswirkungen auf die Nutzerzufriedenheit erklärt und mit den FinOps-Vorgaben abgeglichen haben. Das wurde vom Steering Committee abgenickt."}
{"ts": "164:24", "speaker": "I", "text": "Gab es auch Entscheidungen, die bewusst gegen Runbook-Empfehlungen gingen?"}
{"ts": "164:28", "speaker": "E", "text": "Ja, beim Experiment 'QuickFilter' haben wir das Feature-Flag direkt auf 50% der Pilot-User gesetzt, obwohl RB-ATL-FF-02 einen stufenweisen Rollout empfiehlt. Der Grund: Wir brauchten schnell signifikante Daten, um vor dem Go-Live zu entscheiden."}
{"ts": "164:35", "speaker": "I", "text": "Wie haben Sie das Risiko dabei bewertet?"}
{"ts": "164:39", "speaker": "E", "text": "Wir haben ein Pre-Mortem durchgeführt, mögliche UX-Fehlerbilder gesammelt und ein Rollback-Skript vorbereitet. Letztlich gab es keine kritischen Incidents, aber zwei Tickets (ATL-UX-441 und -442) mit Minor Issues."}
{"ts": "164:46", "speaker": "I", "text": "Welche Lessons Learned ziehen Sie daraus für den Rollout?"}
{"ts": "164:50", "speaker": "E", "text": "Dass man bei gut isolierten UI-Features und vorhandenem Rollback durchaus schneller testen kann, solange man die Observability-Kanäle sauber vorbereitet. Für komplexe Flows würde ich das Runbook strikt einhalten."}
{"ts": "165:06", "speaker": "I", "text": "Sie hatten vorhin den Zusammenhang zwischen Offline‑Sync und dem Designsystem erwähnt. Können Sie das bitte noch einmal genauer erklären, gerade was die Testmethoden angeht?"}
{"ts": "165:15", "speaker": "E", "text": "Ja, klar. Wir haben für DS‑ATLAS v2 eigene UI‑Snapshot‑Tests, die im CI‑Pipeline‑Schritt vor der Offline‑Sync‑Validierung laufen. Dabei werden die Feature Flags so gesetzt wie in der Runbook‑Sektion 4.2 beschrieben, um sowohl die neuen Komponenten als auch den alten Fallback zu prüfen."}
{"ts": "165:28", "speaker": "I", "text": "Und wie gehen Sie vor, wenn ein Snapshot‑Test fehlschlägt, während der Offline‑Sync gleichzeitig eine Warnung wirft?"}
{"ts": "165:38", "speaker": "E", "text": "Dann triggern wir gemäß Incident‑Runbook UX‑17 eine kombinierte Analyse. Sprich, wir prüfen zuerst, ob die UI‑Differenz durch das Feature Flag gesteuert wird. Falls nein, wird ein Ticket im JIRA‑Board P‑ATL‑BUG angelegt und parallel ein Sync‑Log‑Export in den Observability‑Stack Nimbus hochgeladen."}
{"ts": "165:55", "speaker": "I", "text": "Gab es in der Pilotphase konkrete Fälle dieser Art?"}
{"ts": "166:02", "speaker": "E", "text": "Ja, ein Beispiel ist Ticket P‑ATL‑BUG‑143. Da hat eine neue Button‑Komponente in DS‑ATLAS v2 das Layout unterbrochen, was wiederum den Offline‑Sync‑Status falsch angezeigt hat, weil die Status‑Icon‑Komponente nicht geladen wurde."}
{"ts": "166:16", "speaker": "I", "text": "Interessant. Wie beeinflussen solche Fehler Ihre UX‑Entscheidungen in Bezug auf Authentifizierung mit der Aegis‑IAM‑Lösung?"}
{"ts": "166:26", "speaker": "E", "text": "Weil Aegis IAM die Login‑Flows steuert, müssen wir sicherstellen, dass UI‑Fehler nicht dazu führen, dass Session‑Status im Offline‑Modus falsch interpretiert wird. Das hat uns veranlasst, in RFC‑P‑ATL‑22 eine zusätzliche visuelle Redundanz für Auth‑Status einzubauen."}
{"ts": "166:43", "speaker": "I", "text": "Das klingt nach einem Multi‑System‑Thema. Wie binden Sie Observability‑Daten aus Nimbus konkret ein, um solche Cross‑System‑Fehler zu erkennen?"}
{"ts": "166:54", "speaker": "E", "text": "Wir korrelieren die UX‑Events aus der App mit den Systemmetriken in Nimbus. Zum Beispiel, wenn der Offline‑Sync‑Job länger als 3 Sekunden dauert, prüfen wir in den Logs, ob parallel ein IAM‑Token Refresh lief. So erkennen wir Abhängigkeiten, die in keiner SLA‑Tabelle stehen."}
{"ts": "167:12", "speaker": "I", "text": "Gab es Fälle, in denen Sie gegen ein bestehendes Runbook entschieden haben, um Barrierefreiheit zu priorisieren?"}
{"ts": "167:21", "speaker": "E", "text": "Ja, im Fall von Ticket P‑ATL‑ACC‑58. Das Runbook empfahl eine Bildkompression für Performance, wir haben sie deaktiviert, um die Lesbarkeit der Icons für Screen‑Reader‑Nutzer zu bewahren. Das Risiko wurde im Risk‑Log RSK‑P‑ATL‑09 dokumentiert."}
{"ts": "167:38", "speaker": "I", "text": "Wie haben Sie diese Entscheidung gegenüber den FinOps‑Vorgaben aus Vesta gerechtfertigt?"}
{"ts": "167:47", "speaker": "E", "text": "Wir haben eine Kosten‑Nutzen‑Analyse erstellt, die zeigte, dass die Mehrkosten durch höhere Bildgrößen unter 0,3 % der Gesamtkosten bleiben. FinOps hat dem in der Steering‑Sitzung vom 12. Mai zugestimmt, unter der Bedingung, dass wir Monitoring Alerts für Bandbreiten‑Peaks setzen."}
{"ts": "168:03", "speaker": "I", "text": "Welche offenen Risiken sehen Sie jetzt für den Rollout?"}
{"ts": "168:11", "speaker": "E", "text": "Das größte Risiko ist eine Inkonsistenz zwischen Feature‑Flag‑Konfigurationen in Staging und Produktion. Wenn Flags nicht synchron sind, kann es zu UX‑Brüchen kommen. Wir dokumentieren das in RFC‑P‑ATL‑31 und haben einen automatisierten Flag‑Sync‑Check in die Deployment‑Pipeline integriert."}
{"ts": "167:06", "speaker": "I", "text": "Wie sind Sie bei der Definition der UX-KPIs für den Pilot in Bezug auf die bestehenden SLAs vorgegangen?"}
{"ts": "167:14", "speaker": "E", "text": "Wir haben uns am SLA-Dokument SLA-ATL-2024-01 orientiert, das u.a. eine maximale Ladezeit von 2,5 Sekunden vorsieht. Daraus habe ich drei UX-KPIs abgeleitet: wahrgenommene Ladezeit, Interaktionslatenz und Fehlertoleranzrate, und diese in unseren UX-Testplan integriert."}
{"ts": "167:28", "speaker": "I", "text": "Und wie stellen Sie sicher, dass diese KPIs während der Feature-Flag-Ausrollungen nicht verletzt werden?"}
{"ts": "167:36", "speaker": "E", "text": "Wir haben im DS-ATLAS v2 Build-Pipeline einen automatischen Lighthouse-Check integriert. Jede Aktivierung eines neuen Flags triggert den Check, Ergebnisse landen im Ticket-Tracker unter Label 'perf-ux'. Bei Überschreitungen wird der Rollout gemäß Runbook RB-FF-ATL-03 pausiert."}
{"ts": "167:52", "speaker": "I", "text": "Gab es im Pilot bisher Fälle, wo Sie pausieren mussten?"}
{"ts": "168:00", "speaker": "E", "text": "Ja, beim Flag 'offline_sync_v2' stieg die Interaktionslatenz um 18%. Wir haben das in Ticket UX-245 dokumentiert, Flag zurückgesetzt und mit dem Sync-Team eine optimierte Delta-Berechnung getestet, bevor wir erneut ausgerollt haben."}
{"ts": "168:18", "speaker": "I", "text": "Das bringt mich zur Schnittstelle mit der Offline-Sync-Logik – wie testen Sie hier die Designsystem-Konsistenz?"}
{"ts": "168:27", "speaker": "E", "text": "Wir nutzen ein internes Automation-Skript 'atlas-sync-ui-verify', das 42 UI-States durchgeht, während es Sync-Events simuliert. Das Script gleicht Farb- und Typostile gegen DS-ATLAS v2 JSON-Definitionen ab."}
{"ts": "168:43", "speaker": "I", "text": "Wie fließen hier Observability-Daten aus Nimbus ein?"}
{"ts": "168:50", "speaker": "E", "text": "Nimbus liefert User Journey Traces, z.B. wo Nutzer den Sync-Dialog abbrechen. Diese Heatmaps haben gezeigt, dass ein Button-Label irreführend war. Wir haben es in Sprint 21 geändert und per Feature Flag nur für 10% aktiviert, um die Abbruchrate zu messen."}
{"ts": "169:08", "speaker": "I", "text": "Gab es bei diesen Änderungen Zielkonflikte mit den FinOps-Vorgaben aus Vesta?"}
{"ts": "169:16", "speaker": "E", "text": "Teilweise – FinOps forderte kürzere Sync-Intervalle zur Kostenreduktion, was aber zu mehr Wartezeit im UI führte. In RFC-ATL-UX-019 haben wir den Kompromiss dokumentiert: Intervalle leicht optimiert, aber eine visuelle 'Sync läuft'-Anzeige beibehalten, um das Nutzervertrauen zu sichern."}
{"ts": "169:36", "speaker": "I", "text": "Haben Sie schon einmal bewusst gegen eine Runbook-Empfehlung entschieden?"}
{"ts": "169:44", "speaker": "E", "text": "Ja, Runbook RB-ACC-05 empfiehlt WCAG-Konformität strikt vor Performance. Bei einem kritischen Bug in der Screenreader-Ausgabe haben wir jedoch temporär einen weniger komplexen ARIA-Tag genutzt, um die Ladezeit zu sichern. Das war mit Product und QA abgestimmt und in Ticket ACC-332 protokolliert."}
{"ts": "170:04", "speaker": "I", "text": "Welche Risiken sehen Sie für den anstehenden Rollout?"}
{"ts": "170:12", "speaker": "E", "text": "Hauptsächlich das Risiko, dass bei gleichzeitiger Aktivierung mehrerer Feature Flags unvorhergesehene UI-Interaktionen entstehen. Wir haben in RFC-ATL-RISK-07 beschrieben, wie wir Flags gruppieren und gestaffelt aktivieren, um Cross-Impact zu minimieren."}
{"ts": "176:06", "speaker": "I", "text": "Sie hatten vorhin schon angedeutet, dass es in der Pilotphase ein paar bewusst eingegangene Trade-offs gab. Können Sie ein Beispiel nennen, das besonders prägend war?"}
{"ts": "176:18", "speaker": "E", "text": "Ja, eines der markantesten Beispiele war der Umgang mit der Offline-Sync-Queue. Laut Runbook RB-SYNC-04 sollten wir immer vollständige Asset-Validierung fahren, aber um die UI-Reaktionszeit unter 200ms zu halten, haben wir nur inkrementelle Validierungen bei experimentellen Features gemacht."}
{"ts": "176:41", "speaker": "I", "text": "War das ein dokumentierter Ausnahmefall oder eher eine ad-hoc Entscheidung?"}
{"ts": "176:48", "speaker": "E", "text": "Das war formal dokumentiert. Wir haben eine RFC #ATLAS-UX-112 eingereicht, in der wir die Messwerte aus dem Observability-Stack von Nimbus belegt haben. Die Ticket-Historie in JIRA zeigt auch, dass das Security-Team dem zugestimmt hat, solange wir bei 95% SLA-Erfüllung bleiben."}
{"ts": "177:12", "speaker": "I", "text": "Gab es dabei Bedenken hinsichtlich der Integrität der Daten, gerade im Zusammenspiel mit Aegis IAM?"}
{"ts": "177:20", "speaker": "E", "text": "Natürlich, Aegis prüft beim Re-Sync die Token und Session-Scopes. Wir haben intern mit dem IAM-Team ein temporäres Scope-Flag eingeführt, 'sync-lite', das in der Feature-Flag-Konfiguration hinterlegt ist. Sobald der Voll-Rollout kommt, wird dieses Flag wieder entfernt."}
{"ts": "177:44", "speaker": "I", "text": "Wie haben Sie diese technischen Details ins UX-Team getragen, damit die Designs konsistent bleiben?"}
{"ts": "177:52", "speaker": "E", "text": "Wir haben im DS-ATLAS v2 ein spezielles Pattern für 'sync pending'-States ergänzt. Das war in FIG-Pattern-Set #23 beschrieben, damit Designer wissen, wie sie den visuellen Status für teil-validierte Daten anzeigen."}
{"ts": "178:15", "speaker": "I", "text": "Gab es dadurch Konflikte mit den Accessibility-Vorgaben?"}
{"ts": "178:22", "speaker": "E", "text": "Ein bisschen, ja. Die WCAG-konforme Farbcodierung musste so angepasst werden, dass auch bei eingeschränktem Kontrast der Sync-Status erkennbar bleibt. Wir haben das mit Nutzerinterviews und einem kurzen A/B-Test verifiziert, Ticket UX-ACC-77."}
{"ts": "178:47", "speaker": "I", "text": "Wie lief der A/B-Test in der Pilotgruppe ab?"}
{"ts": "178:54", "speaker": "E", "text": "Wir haben die Gruppe in zwei Kohorten aufgeteilt, 30% mit der neuen Statusanzeige, 70% mit der alten. Über das Nimbus Dashboard haben wir Interaktionsraten und Fehlermeldungen erfasst. Nach zwei Wochen war klar, dass die neue Variante die Fehlerrate um 12% senkt."}
{"ts": "179:21", "speaker": "I", "text": "Wurden die Ergebnisse sofort umgesetzt oder gab es noch Review-Schleifen?"}
{"ts": "179:28", "speaker": "E", "text": "Es gab ein kurzes Review mit FinOps, weil die neue Variante minimal höhere Render-Kosten bei alten Geräten verursachte. Wir haben das als akzeptabel bewertet, da die SLA-konforme Fehlerquote Vorrang hatte."}
{"ts": "179:48", "speaker": "I", "text": "Gab es weitere Risiken, die Sie für den finalen Rollout noch beobachten müssen?"}
{"ts": "179:55", "speaker": "E", "text": "Ja, vor allem das Risiko, dass bei parallelen Feature-Flag-Rollouts die DS-ATLAS v2 Patterns divergieren. Wir haben dazu ein Monitoring-Skript 'pattern-audit.js' geschrieben, das nightly läuft und Abweichungen bei Komponenten meldet, Ticket QA-DS-59."}
{"ts": "185:06", "speaker": "I", "text": "Lassen Sie uns noch einmal auf die Schnittstellen zurückkommen – konkret die Verbindung zwischen Atlas Mobile und Nimbus Observability. Wie wirkt sich das auf Ihren täglichen UX-Workflow aus?"}
{"ts": "185:17", "speaker": "E", "text": "Das ist tatsächlich ein zentraler Bestandteil – wir haben in der Pilotphase ein Mapping zwischen den Telemetrie-Events aus Nimbus und unseren UX-KPIs definiert. So kann ich im Daily-Report sehen, ob z. B. die Ladezeiten im Offline-zu-Online-Transition-Flow den im SLA-Abschnitt 3.2 festgelegten Schwellenwert von 1,2 Sekunden überschreiten."}
{"ts": "185:33", "speaker": "I", "text": "Und wie reagieren Sie, wenn solche Schwellenwerte überschritten werden?"}
{"ts": "185:38", "speaker": "E", "text": "Wir haben ein Quick-Response-Playbook – intern als Runbook RB-UX-017 geführt – das vorsieht, zunächst die betroffenen Feature Flags temporär zu deaktivieren. Danach prüfen wir mit dem Offline-Sync-Testset aus DS-ATLAS v2, ob das Problem reproduzierbar ist."}
{"ts": "185:53", "speaker": "I", "text": "Sie hatten vorhin die Offline-Sync-Logik erwähnt. Gibt es dort besondere Herausforderungen in der Kombination mit dem Designsystem?"}
{"ts": "186:00", "speaker": "E", "text": "Ja, vor allem bei komponentenübergreifenden Statusanzeigen. Wir haben in DS-ATLAS v2 einheitliche Spinner und Progress Bars, aber offline müssen diese im sog. Low-Bandwidth-Mode anders getriggert werden. Die Tests laufen hier teils gegen simulierte Netzwerkprofile, die aus den Nimbus-Daten abgeleitet werden."}
{"ts": "186:17", "speaker": "I", "text": "Wie steht es um die Abhängigkeiten zur Aegis IAM-Lösung – beeinflusst das Ihre UX-Entscheidungen?"}
{"ts": "186:23", "speaker": "E", "text": "Definitiv. Aegis IAM liefert uns die Authentifizierungs-UI, die wir nur thematisch anpassen dürfen. Wenn wir wegen Barrierefreiheit größere Änderungen wollen, muss ein Change Request nach RFC-442-UX gestellt werden. Das dauert und beeinflusst, wie schnell wir iterieren können."}
{"ts": "186:39", "speaker": "I", "text": "Gibt es ein Beispiel, wo Sie trotz dieser Restriktionen schnelle Anpassungen umgesetzt haben?"}
{"ts": "186:44", "speaker": "E", "text": "Ja, Ticket UX-5432: Wir hatten Berichte von Screen-Reader-Nutzern, die den Login-Button nicht finden konnten. Statt den kompletten IAM-Flow zu ändern, haben wir über ein Feature Flag nur den ARIA-Label-Text aktualisiert – das ging innerhalb von 24 Stunden live."}
{"ts": "186:59", "speaker": "I", "text": "Beeinflussen die FinOps-Vorgaben aus Vesta auch solche Accessibility-Anpassungen?"}
{"ts": "187:05", "speaker": "E", "text": "Indirectly, yes – wir müssen jede Änderung auf ihre Render-Performance und damit auf die Cloud-Kosten prüfen. Ein zu komplexer UI-Workaround könnte mehr Rechenzeit im Backend triggern, was gegen die Kosten-Quoten aus Vesta verstoßen würde."}
{"ts": "187:19", "speaker": "I", "text": "Im Hinblick auf den Rollout: Welche Risiken haben Sie zuletzt dokumentiert?"}
{"ts": "187:24", "speaker": "E", "text": "In RFC-490-PilotUX haben wir drei Hauptrisiken erfasst: mögliche Inkonsistenzen von UI-Elementen bei deaktivierten Feature Flags, Latenzspitzen im Offline-Sync unter 3G-Bedingungen und die begrenzte Flexibilität bei IAM-bedingten Anpassungen."}
{"ts": "187:39", "speaker": "I", "text": "Gab es auch Entscheidungen, die bewusst gegen Runbook-Empfehlungen gingen?"}
{"ts": "187:44", "speaker": "E", "text": "Ja, bei Ticket UX-5581 haben wir gegen RB-UX-009 entschieden, das standardmäßig einen Dark-Release empfiehlt. Aufgrund positiver Testergebnisse in der Research-Community haben wir das Feature direkt an 100 % der Pilotnutzer gegeben – mit dem Risiko, dass wir bei Problemen keinen gestuften Rollback hatten."}
{"ts": "192:06", "speaker": "I", "text": "Wir haben eben die Interaktion mit Nimbus kurz gestreift, aber könnten Sie bitte genauer beschreiben, wie Sie Observability-Daten konkret in Ihre UX-Iterationen einfließen lassen?"}
{"ts": "192:18", "speaker": "E", "text": "Ja, gern. Wir ziehen aus Nimbus sowohl Metriken zur Offline-Sync-Latenz als auch Heatmaps der Nutzeraktionen. Diese Daten gleichen wir mit Ergebnissen unserer wöchentlichen Usability-Tests ab. Wenn wir zum Beispiel sehen, dass Nutzer im Sync-Status-Screen länger verweilen als im Design vorgesehen, fließt das in ein Ticket im JIRA-Board ein, Kategorie 'UX-Perf', und wir passen Microcopy oder Animationen entsprechend an."}
{"ts": "192:42", "speaker": "I", "text": "Interessant. Gab es da auch schon einen Fall, wo die Observability-Daten im Widerspruch zu Ihrer Hypothese standen?"}
{"ts": "192:53", "speaker": "E", "text": "Ja, ein Beispiel: Wir dachten, die Lade-Spinner bei schwacher Verbindung werden als Feedback positiv wahrgenommen. Nimbus zeigte aber, dass viele Nutzer in diesem Zustand die App schließen. Das hat uns veranlasst, im Rahmen von RFC-4821 einen alternativen Offline-Hinweis mit progressiver Detaillierung zu pilotieren."}
{"ts": "193:18", "speaker": "I", "text": "Und wie haben Sie sichergestellt, dass diese Änderung das DS-ATLAS v2 nicht bricht?"}
{"ts": "193:27", "speaker": "E", "text": "Wir haben dazu ein spezielles Regression-Test-Set im Figma-Plugin 'Atlas Check' laufen lassen, das prüft, ob Komponenten-Token und Spacing-Standards eingehalten werden. Zusätzlich war ein Feature Flag aktiv, sodass nur 10% der Pilotnutzer die neue Offline-Hinweis-Komponente sahen."}
{"ts": "193:49", "speaker": "I", "text": "Gab es seitens FinOps Vorgaben, die diese Lösung beeinflusst haben?"}
{"ts": "194:00", "speaker": "E", "text": "Ja, FinOps aus Vesta hat uns gebeten, die Asset-Größe der neuen Illustration unter 50KB zu halten, um mobile Datenkosten zu senken. Wir mussten daher auf Vektor-Icons umsteigen und komplexe Farbverläufe vermeiden."}
{"ts": "194:19", "speaker": "I", "text": "Klingt nach einer Mehrfach-Optimierung. Hat das zu Zielkonflikten mit der Accessibility geführt?"}
{"ts": "194:29", "speaker": "E", "text": "Kurzzeitig ja. Die abgespeckten Grafiken hatten zu wenig Kontrast. Wir haben dann im Ticket UX-A11Y-77 festgehalten, dass wir die Vektorfarben an WCAG-AAA anpassen, auch wenn das minimal die Ladezeit erhöht."}
{"ts": "194:49", "speaker": "I", "text": "Gab es für diesen Fall ein bestehendes Runbook, oder mussten Sie improvisieren?"}
{"ts": "194:59", "speaker": "E", "text": "Das Runbook RB-UX-04 enthält zwar Richtlinien zur Farbkontrasteinhaltung, aber keine klare Vorgabe für den Trade-off zwischen Asset-Größe und Kontrast. Wir haben daher bewusst davon abgewichen und eine Notiz im Lessons-Learned-Dokument der Pilotphase ergänzt."}
{"ts": "195:21", "speaker": "I", "text": "Wie fließt diese Lessons Learned in die Vorbereitung des Rollouts ein?"}
{"ts": "195:30", "speaker": "E", "text": "Wir planen, im Rollout-Runbook eine neue Sektion 'Visual Asset Sizing vs. A11Y' zu ergänzen. Außerdem setzen wir in der nächsten DS-ATLAS-Version einen automatischen Größen- und Kontrast-Check in der CI-Pipeline ein."}
{"ts": "195:49", "speaker": "I", "text": "Gibt es noch Risiken, die Sie für den Rollout als kritisch einstufen?"}
{"ts": "196:00", "speaker": "E", "text": "Ja, vor allem das Risiko, dass Offline-Sync bei sehr großen Datensätzen länger als die in SLA-ATL-05 definierten 3 Sekunden dauert. Wir haben dazu RFC-4902 erstellt, in dem wir fallback-UX-Flows definieren, um Nutzerfrustration zu minimieren."}
{"ts": "202:06", "speaker": "I", "text": "Lassen Sie uns noch einmal auf die interne Abstimmung zurückkommen: Wie genau läuft bei Ihnen das wöchentliche Sync-Meeting mit dem Atlas Core Dev-Team ab?"}
{"ts": "202:21", "speaker": "E", "text": "Das ist ziemlich strukturiert, wir starten mit einem Review der Feature-Flag-Matrix aus dem letzten Deploy, dann schauen wir auf die Jira-Filter für offene UX-Defekte. Ich bringe die Accessibility-Checks mit, basierend auf unserem DS-ATLAS v2 Audit-Report."}
{"ts": "202:42", "speaker": "I", "text": "Und diese Accessibility-Checks – sind die Teil eines automatisierten Pipelineschritts oder eher manuell?"}
{"ts": "202:55", "speaker": "E", "text": "Teils, teils. Wir haben im CI einen Pa11y-Lauf, der in der Stage-Umgebung gegen die aktuell aktivierten Feature Flags testet. Dazu kommen manuelle Screenreader-Tests, weil die Runbooks RB-UX-07 explizit empfehlen, kritische Journeys hands-on zu prüfen."}
{"ts": "203:16", "speaker": "I", "text": "Sie hatten im letzten Meeting angedeutet, dass es eine interessante Interaktion zwischen dem Offline-Sync und der IAM-Lösung gab. Können Sie das ausführen?"}
{"ts": "203:32", "speaker": "E", "text": "Ja, das war im Ticket UX-2345 dokumentiert: Wenn der User offline ist und Token Refresh ansteht, blockiert Aegis IAM den Sync-Thread. Wir mussten im Design einen klaren Reconnect-CTA einbauen, der sowohl im DS-ATLAS v2 Stil als auch barrierefrei ist."}
{"ts": "203:56", "speaker": "I", "text": "Hat das Auswirkungen auf die Performance-Metriken gehabt, die Sie im SLA definiert haben?"}
{"ts": "204:09", "speaker": "E", "text": "Kurzfristig ja – die Time-to-Interactive ist in Offline-Szenarien um ca. 400 ms gestiegen. Wir haben das in den SLA-Anhang SLA-ATL-UX als Ausnahme dokumentiert und mit den FinOps-Kollegen abgestimmt, weil zusätzliche Requests Kosten verursachen."}
