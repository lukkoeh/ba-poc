{"ts": "00:00", "speaker": "I", "text": "Können Sie bitte zunächst die Kernziele der UX-Strategie für Atlas Mobile im aktuellen Pilotstadium erläutern?"}
{"ts": "05:12", "speaker": "E", "text": "Ja, gern. Im Pilot legen wir den Fokus auf drei Hauptziele: Konsistenz über Plattformen hinweg, ein barrierefreies Erlebnis gemäß interner Accessibility-Policy POL-UX-009 und eine robuste Offline-Nutzung. Diese Punkte wurden bereits in der Kickoff-Session im Februar im Dokument UX-STRAT-PATL-01 festgehalten."}
{"ts": "10:03", "speaker": "I", "text": "Wie stellen Sie sicher, dass Accessibility-Anforderungen gemäß dieser Policy erfüllt werden?"}
{"ts": "15:26", "speaker": "E", "text": "Wir haben eine Accessibility-Checklist in Confluence, die direkt mit unseren Figma-Komponenten in DS-ATLAS v2 verlinkt ist. Zusätzlich laufen automatisierte Screenreader-Tests in unserer CI-Pipeline, basierend auf Runbook RB-UX-ACC-004."}
{"ts": "20:41", "speaker": "I", "text": "Welche Metriken oder KPIs nutzen Sie, um UX-Qualität messbar zu machen?"}
{"ts": "25:12", "speaker": "E", "text": "Wir kombinieren quantitative Metriken wie Task Completion Rate und Time on Task mit qualitativen Feedback-Scores aus den Pilotgruppen. Außerdem tracken wir Error Recovery Time bei Offline-Phasen – das ist ein KPI, der aus der RB-MOB-021 Ableitung stammt."}
{"ts": "30:27", "speaker": "I", "text": "Wie integrieren Sie DS-ATLAS v2 Tokenized Components in den Entwicklungsprozess, um UI-Konsistenz zu sichern?"}
{"ts": "35:05", "speaker": "E", "text": "Alle UI-Elemente werden als Tokenized Components bereitgestellt, mit zentral verwalteten Variablen für Farben, Abstände und Typografie. Über Feature Flags schalten wir inkrementelle Änderungen frei, die in separaten Branches gegen die Token-Definitionen geprüft werden."}
{"ts": "40:18", "speaker": "I", "text": "Welche Rolle spielen Feature Flags beim Testen neuer Design-Elemente konkret?"}
{"ts": "45:44", "speaker": "E", "text": "Sie erlauben uns, neue UI-Varianten nur für definierte Pilotnutzer freizugeben. So können wir A/B-Tests im Live-System durchführen, ohne dass die gesamte Nutzerbasis betroffen ist. Außerdem können wir Flags remote deaktivieren, falls ein Element sich negativ auf die UX auswirkt."}
{"ts": "50:37", "speaker": "I", "text": "Gab es Situationen, in denen ein Feature Flag die UX negativ beeinflusst hat?"}
{"ts": "55:02", "speaker": "E", "text": "Ja, im Ticket UX-BUG-482. Dort hat ein Flag für ein neues Navigationslayout bei manchen Geräten zu Layout-Shifts geführt, weil es nicht mit einem älteren Token-Set kompatibel war. Wir mussten das Flag innerhalb von zwei Stunden nach Alarm deaktivieren."}
{"ts": "60:18", "speaker": "I", "text": "Welche UX-Patterns setzen Sie ein, um Nutzer während Offline-Phasen zu informieren?"}
{"ts": "65:41", "speaker": "E", "text": "Wir nutzen non-blocking Toast-Messages für kurzfristige Verbindungsprobleme und persistent Banners für längere Ausfälle. Zusätzlich gibt es eine manuelle Sync-Schaltfläche, um Nutzern Kontrolle zu geben. Diese Patterns sind in GUID-UX-OFFL-02 dokumentiert."}
{"ts": "70:59", "speaker": "I", "text": "Wie wird die RB-MOB-021 Crash Loop Mitigation in UX-Workflows berücksichtigt?"}
{"ts": "75:12", "speaker": "E", "text": "RB-MOB-021 sieht vor, dass wir nach drei konsekutiven Crashes in einer Session den Safe Mode aktivieren. UX-seitig bedeutet das: Wir reduzieren Animationen, deaktivieren experimentelle Flags und zeigen einen klaren Hinweis-Dialog. Dieser Workflow wurde in Sprint 14 mit QA verprobt und in Testplan TP-UX-CRASH-07 verankert."}
{"ts": "90:00", "speaker": "I", "text": "Wir hatten gerade die Verbindung zwischen Design-System und QA angerissen. Können Sie jetzt bitte genauer beschreiben, wie Sie beim Offline-Sync die Nutzer während einer langen Netzwerkausfallphase informieren?"}
{"ts": "90:07", "speaker": "E", "text": "Ja, wir setzen da auf ein mehrstufiges Pattern: zunächst ein dezentes Banner mit dem Status 'Offline – Änderungen werden lokal gesichert', dann nach etwa fünf Minuten ohne Verbindung ein modaler Hinweis mit der Option, den Sync manuell anzustoßen. Laut unserem Runbook RB-MOB-018 ist das kombiniert mit einem kleinen Lottie-Animation-Asset, um die Wartezeit etwas angenehmer zu gestalten."}
{"ts": "90:25", "speaker": "I", "text": "Und wie fließt die RB-MOB-021 Crash Loop Mitigation in diese Abläufe ein?"}
{"ts": "90:31", "speaker": "E", "text": "RB-MOB-021 definiert, dass bei drei konsekutiven App-Abstürzen innerhalb von fünf Minuten der Offline-Sync automatisch deaktiviert und ein Fallback-View geladen wird. Wir haben das so in den UX-Flow integriert, dass der Nutzer eine klare Fehlermeldung mit Ticket-ID-Hinweis bekommt, damit er Support kontaktieren kann."}
{"ts": "90:49", "speaker": "I", "text": "Gibt es dafür auch dokumentierte SLAs oder SLOs, speziell für Offline-Funktionalität?"}
{"ts": "90:54", "speaker": "E", "text": "Ja, im SLA-Dokument SLA-MOB-2023-07 ist festgelegt, dass 95% der Offline-Sitzungen unter 30 Sekunden Synchronisationszeit bleiben müssen, sobald wieder Netz vorhanden ist. Das SLO sieht vor, dass unter Pilotbedingungen mindestens 98% der Offline-Transaktionen fehlerfrei übernommen werden."}
{"ts": "91:15", "speaker": "I", "text": "Wie stellen Sie sicher, dass diese SLAs in der Qualitätssicherung überprüft werden?"}
{"ts": "91:20", "speaker": "E", "text": "Unsere QA erstellt Testfälle gemäß POL-QA-014, die sowohl funktionale als auch UX-Akzeptanzkriterien enthalten. Für den Offline-Bereich nutzen wir ein internes Tool namens SyncTrace, das die Dauer und Erfolgsquote jeder Synchronisation protokolliert und mit den SLAs abgleicht."}
{"ts": "91:38", "speaker": "I", "text": "Gab es Situationen, in denen UX-Verbesserungen mit Release-Deadlines kollidiert sind?"}
{"ts": "91:43", "speaker": "E", "text": "Ja, beim letzten Sprint wollten wir eigentlich die visuelle Progress-Anzeige für den Sync überarbeiten, um sie barrierefreier zu machen. Das hätte aber ein Refactoring der Tokenized Components im DS-ATLAS v2 bedeutet. Aufgrund der Deadline haben wir das in Ticket UX-472 verschoben und als 'post-pilot enhancement' deklariert."}
{"ts": "92:02", "speaker": "I", "text": "Wie kommunizieren Sie in solchen Fällen das Risiko an nicht-technische Stakeholder?"}
{"ts": "92:07", "speaker": "E", "text": "Wir erstellen ein kurzes Risk Assessment Memo im Confluence-Space 'Atlas Governance', in dem wir aufzeigen, welche Zielgruppen möglicherweise beeinträchtigt werden. Für das Progress-Bar-Thema haben wir z.B. die Accessibility-Risikoampel auf Gelb gesetzt und im Steering Committee vorgestellt."}
{"ts": "92:25", "speaker": "I", "text": "Gab es schon mal den Fall, dass eine UX-Entscheidung bewusst gegen eine technische Empfehlung getroffen wurde?"}
{"ts": "92:31", "speaker": "E", "text": "Ja, im RFC-ATL-019 haben wir uns für eine sehr detailreiche Kartenansicht entschieden, obwohl das Rendering auf älteren Geräten die CPU stark belastet. Die Produktseite hat argumentiert, dass die visuelle Differenzierung für die Pilotkunden entscheidend ist, und wir haben das als kalkuliertes Risiko akzeptiert."}
{"ts": "92:50", "speaker": "I", "text": "Und wie dokumentieren Sie solche Trade-offs langfristig?"}
{"ts": "92:55", "speaker": "E", "text": "Wir pflegen eine Trade-off-Liste im Projekt-Repo, jede Entscheidung ist mit RFC- oder Ticket-ID, Datum, Beteiligten und einer Bewertung der Auswirkungen versehen. So kann bei Atlas Mobile später im Rollout genau nachvollzogen werden, warum bestimmte UX- oder Technikpfade gewählt wurden."}
{"ts": "98:00", "speaker": "I", "text": "Lassen Sie uns nun zum Stakeholder-Management kommen. Mich interessiert, wie Sie UX-Risiken an nicht-technische Stakeholder kommunizieren, gerade im Kontext Atlas Mobile."}
{"ts": "98:15", "speaker": "E", "text": "Wir nutzen dafür ein vereinfachtes Risk Briefing Deck, das pro Release erstellt wird. Darin übersetzen wir technische Risiken in klare Nutzer-Auswirkungen, z.B. 'Offline-Sync könnte bei mehr als 48h Netzwerkausfall >30 Sekunden Verzögerung zeigen'. Das hilft den Sales- und Marketing-Teams, realistische Aussagen zu treffen."}
{"ts": "98:45", "speaker": "I", "text": "Und wenn ein Risiko eine direkte Folge einer UX-Entscheidung ist, wie dokumentieren Sie das?"}
{"ts": "99:00", "speaker": "E", "text": "Dann erstellen wir ein RFC-Dokument im internen Confluence mit der ID-Struktur RFC-UX-<Datum>. Beispiel: RFC-UX-2023-11-15 beschreibt, wie wir trotz Entwicklerwarnung das animierte Karten-Overlay ausgeliefert haben, um Pilotnutzer-Feedback zu sammeln, obwohl dies bei älteren Geräten die Renderzeit um 200ms erhöht."}
{"ts": "99:35", "speaker": "I", "text": "Gab es dabei Widerstand seitens der Technik oder Architektur-Gremien?"}
{"ts": "99:50", "speaker": "E", "text": "Ja, das Architecture Board hat in Ticket PROD-RISK-412 gegen den Release gestimmt, mit Verweis auf Runbook RB-MOB-014 'Low-End Device Guidelines'. Wir haben aber in der Risikoabwägung festgehalten, dass der Erkenntnisgewinn aus dem Pilot wichtiger ist als die temporäre Performance-Einbuße."}
{"ts": "100:20", "speaker": "I", "text": "Wie stellen Sie sicher, dass solche Abweichungen nicht unkontrolliert passieren?"}
{"ts": "100:35", "speaker": "E", "text": "Wir haben eine Gate-Review-Checkliste, die direkt an POL-QA-014 angelehnt ist. Darin ist ein Pflichtpunkt 'Trade-off Dokumentation' – ohne Link zu RFC oder Ticket kann kein Go-Live erfolgen."}
{"ts": "101:00", "speaker": "I", "text": "Können Sie ein weiteres Beispiel geben, wo UX priorisiert wurde trotz technischer Bedenken?"}
{"ts": "101:15", "speaker": "E", "text": "Im Sprint 42 wollten wir die neue 'Quick Sync'-Funktion aktivieren. Das Backend-Team warnte vor potenziellen Konflikten mit dem Delta-Merge-Algorithmus. Wir haben sie dennoch als Feature Flag FF-QS-042 für 15% der Nutzer aktiviert, um reale Nutzungsdaten zu sammeln; die Einschränkungen waren im SLA-Addendum SLA-MOB-OSYNC-2023 dokumentiert."}
{"ts": "101:50", "speaker": "I", "text": "Wie reagieren die Stakeholder, wenn solche Risiken sich realisieren?"}
{"ts": "102:05", "speaker": "E", "text": "Wir haben eine 'Post-Incident UX Review' im Runbook RB-UX-009. Damit analysieren wir, ob der Nutzen aus dem Experiment den entstandenen Schaden überwiegt. Bei Quick Sync hatte sich die Hypothese bestätigt, und wir konnten den Sync-Flow optimieren."}
{"ts": "102:30", "speaker": "I", "text": "Werden diese Reviews auch dem Management präsentiert?"}
{"ts": "102:45", "speaker": "E", "text": "Ja, alle Post-Incident Reports gehen in das quartalsweise Steering Committee. Dort werden sie in Business-Impact-Kategorien übersetzt – z.B. 'minor', 'moderate', 'severe' – und mit Handlungsempfehlungen versehen."}
{"ts": "103:10", "speaker": "I", "text": "Letzte Frage hierzu: fließen die Lessons Learned zurück in die Design- oder QA-Prozesse?"}
{"ts": "103:25", "speaker": "E", "text": "Absolut. Wir ergänzen das Design-System DS-ATLAS v2 um 'Caution Patterns', die aus solchen Fällen entstehen. QA erweitert daraufhin die Testfallbibliothek, sodass POL-QA-014 bei ähnlichen Features automatisch prüft, ob diese Patterns berücksichtigt werden."}
{"ts": "114:00", "speaker": "I", "text": "Wir hatten ja eben schon die technischen Aspekte der Offline-Sync-Patterns abgedeckt. Mich würde jetzt interessieren, wie Sie UX-bezogene Risiken an nicht-technische Stakeholder kommunizieren."}
{"ts": "114:05", "speaker": "E", "text": "Also, wir nutzen dafür ein vereinfachtes Risiko-Dashboard, das auf den Daten aus den QA-Reports basiert. Darin markieren wir den Schweregrad farblich und ergänzen eine Kurzbeschreibung ohne Fachjargon. So kann z.B. der Vertrieb sofort sehen, wenn eine Offline-Funktion das SLA von 98% nicht erreicht."}
{"ts": "114:12", "speaker": "I", "text": "Und wie stellen Sie sicher, dass diese vereinfachte Darstellung die technische Tiefe nicht völlig verliert?"}
{"ts": "114:17", "speaker": "E", "text": "Wir verlinken aus dem Dashboard direkt auf die Detail-Tickets, etwa JIRA-UX-4421, wo dann die vollständigen Logs und die Referenz auf RB-MOB-021 hinterlegt sind. So können sich technisch versierte Stakeholder tiefer einlesen."}
{"ts": "114:25", "speaker": "I", "text": "Gab es denn schon mal eine bewusste Entscheidung, bei der Sie trotz technischer Bedenken eine UX-Optimierung durchgesetzt haben?"}
{"ts": "114:30", "speaker": "E", "text": "Ja, im RFC-UX-055 haben wir beschlossen, das visuelle Feedback beim Feature-Flag-Switch zu erzwingen, obwohl das temporär die CPU-Last erhöhte. Die Technik warnte vor möglichen Frame-Drops, aber die Pilotnutzer hatten ohne visuelles Feedback schlicht keine Orientierung."}
{"ts": "114:39", "speaker": "I", "text": "Welche Argumentationslinie hat da den Ausschlag gegeben?"}
{"ts": "114:43", "speaker": "E", "text": "Wir haben eine Impact-Analyse angehängt, die zeigte, dass die CPU-Last nur bei 15% der Nutzer in problematischen Bereichen lag. Gleichzeitig haben wir mit Feature Flags sichergestellt, dass wir das Verhalten jederzeit abschalten können, wenn KPIs wie Time-to-Interactive unter 3 Sekunden fallen."}
{"ts": "114:53", "speaker": "I", "text": "Das klingt nach einem klar dokumentierten Trade-off. Wie wird so etwas langfristig nachgehalten?"}
{"ts": "114:57", "speaker": "E", "text": "In unserem Confluence-Bereich 'UX Decisions' pflegen wir eine Tabelle mit Spalten für RFC-ID, betroffene Komponenten aus DS-ATLAS v2, technische Einwände, UX-Vorteile und ein Review-Datum. So können wir zur Release-Planung gezielt alte Entscheidungen überprüfen."}
{"ts": "115:06", "speaker": "I", "text": "Und wie gehen Sie bei der Priorisierung vor, wenn UX-Verbesserungen und Release-Deadlines kollidieren?"}
{"ts": "115:11", "speaker": "E", "text": "Wir setzen ein Priorisierungsmatrix-Tool ein, das Punkte für Nutzerimpact, technische Machbarkeit und Release-Risiko vergibt. Bei Atlas Mobile hat z.B. Ticket UX-BUG-389 eine hohe UX-Wirkung, wurde aber wegen eines kritischen Backend-Fixes um einen Sprint verschoben."}
{"ts": "115:21", "speaker": "I", "text": "Können Sie ein Beispiel nennen, wo diese Matrix zu einer unpopulären Entscheidung geführt hat?"}
{"ts": "115:25", "speaker": "E", "text": "Ja, das Redesign des Offline-Indikators nach Pattern LIB-OFF-07 wurde von den Designern favorisiert, fiel aber in der Matrix hinter eine Sicherheitsfixe zurück. Wir haben das klar dokumentiert und in Sprint 14 gerettet."}
{"ts": "115:34", "speaker": "I", "text": "Wie reagieren Stakeholder auf solche Verschiebungen?"}
{"ts": "115:38", "speaker": "E", "text": "Wenn wir die Matrix transparent machen und mit SLA- bzw. SLO-Daten untermauern, ist die Akzeptanz höher. Wir zeigen dann z.B., dass ein 0,5% SLA-Bruch gravierender ist als eine kosmetische UX-Änderung."}
{"ts": "116:00", "speaker": "I", "text": "Lassen Sie uns jetzt konkret zur Stakeholder-Kommunikation kommen – wie haben Sie die Risiken aus dem Offline-Sync-Pattern an nicht-technische Stakeholder vermittelt?"}
{"ts": "116:10", "speaker": "E", "text": "Wir haben dafür ein visuelles Risk-Heatmap-Board genutzt, ergänzt durch einfache User-Journey-Storyboards. So konnten wir z.B. den Impact eines RB-MOB-021 Crash Loop in einer Offline-Phase verdeutlichen, ohne technische Jargon zu verwenden."}
{"ts": "116:25", "speaker": "I", "text": "Und war das in einem regulären Steering Meeting oder ad hoc?"}
{"ts": "116:30", "speaker": "E", "text": "Das war ad hoc, ausgelöst durch Ticket UX-4571, in dem unsere QA unter Bezug auf POL-QA-014 einen kritischen Blocker gemeldet hat. Wir mussten sofort reagieren, um die Pilotgruppe nicht zu verlieren."}
{"ts": "116:45", "speaker": "I", "text": "Gab es dabei Konflikte mit technischen Empfehlungen, die Sie bewusst übergangen haben?"}
{"ts": "116:52", "speaker": "E", "text": "Ja, der Architektur-Lead wollte die Sync-Intervalle drastisch reduzieren, um Crash Loops zu vermeiden. UX-seitig haben wir jedoch entschieden, bei längeren Intervallen zu bleiben, um den Akkuverbrauch niedrig zu halten. Dieser Trade-off ist in RFC-ATL-092 dokumentiert."}
{"ts": "117:10", "speaker": "I", "text": "Wie wird so ein Trade-off in der Dokumentation verankert, damit er später nachvollziehbar bleibt?"}
{"ts": "117:16", "speaker": "E", "text": "Wir pflegen im Confluence den Abschnitt 'Design Rationale', verlinken auf das RFC und auf die betroffenen Jira-Issues. Zusätzlich markieren wir betroffene Testfälle in der POL-QA-014-Matrix, um die Traceability zu sichern."}
{"ts": "117:32", "speaker": "I", "text": "Wie reagieren die Stakeholder, wenn sie sehen, dass UX-Anforderungen manchmal technische Risiken erhöhen?"}
{"ts": "117:38", "speaker": "E", "text": "Das ist ein Balanceakt. Wir verwenden Impact-vs-Likelihood-Diagramme, um klarzumachen, dass manche Risiken akzeptabel sind, wenn der Nutzen für die Nutzererfahrung hoch genug ist."}
{"ts": "117:52", "speaker": "I", "text": "Gab es auch Fälle, wo Sie technische Empfehlung strikt befolgt haben, obwohl UX darunter litt?"}
{"ts": "118:00", "speaker": "E", "text": "Ja, beim Feature Flag FF-GeoCache mussten wir aus Sicherheitsgründen den Offline-Cache verschlüsseln, was die Ladezeit im Pilot um ~250ms verlängerte. Das war in Abstimmung mit SecOps unumgänglich."}
{"ts": "118:15", "speaker": "I", "text": "Wie haben Sie diesen Kompromiss kommuniziert?"}
{"ts": "118:20", "speaker": "E", "text": "Wir haben ein kurzes Demo-Video erstellt, das die Verzögerung zeigt, und parallel die Sicherheitsvorteile im Klartext erläutert. So konnten die Produkt-Owner den Kontext verstehen."}
{"ts": "118:35", "speaker": "I", "text": "Und das wurde wieder in den RFCs dokumentiert?"}
{"ts": "118:40", "speaker": "E", "text": "Korrekt, in RFC-ATL-105 unter 'Security-Driven UX Impact'. Außerdem haben wir einen Eintrag in der Lessons-Learned-Liste angelegt, um bei zukünftigen Offline-Sync-Features schneller entscheiden zu können."}
{"ts": "124:00", "speaker": "I", "text": "Lassen Sie uns jetzt noch mal konkret auf die Offline-Sync-Komponente eingehen – gab es in der Pilotphase Fälle, in denen die definierten SLOs unterschritten wurden?"}
{"ts": "124:12", "speaker": "E", "text": "Ja, tatsächlich hatten wir in Sprint 7 einen Ausreißer: Das SLA für Sync unter 5 Sekunden bei Netzrückkehr wurde in 14% der Sessions überschritten. Laut unserem Monitoring-Widget in der QA-Pipeline lag das am verzögerten Queue-Flush der Sync-Engine."}
{"ts": "124:32", "speaker": "I", "text": "Wurde das in irgendeinem Runbook wie RB-MOB-021 berücksichtigt oder ergänzt?"}
{"ts": "124:39", "speaker": "E", "text": "Wir haben RB-MOB-021 um einen Appendix erweitert, in dem beschrieben ist, wie der Queue-Flush-Prozess vor dem UI-Repaint priorisiert wird. Das ist eine Abweichung vom Standard, aber für die UX wichtig, damit der Nutzer das Gefühl bekommt, sofort wieder 'online' zu sein."}
{"ts": "124:59", "speaker": "I", "text": "Und wie haben Sie diese Anpassung rückwirkend in die QA-Traceability aufgenommen?"}
{"ts": "125:07", "speaker": "E", "text": "Wir haben im Testfall-Repository unter POL-QA-014 einen neuen Testfall TCF-ATL-092 angelegt. Dieser mappt direkt auf das geänderte Runbook und ist mit den User Stories im Jira-Projekt P-ATL verlinkt."}
{"ts": "125:22", "speaker": "I", "text": "Gab es dabei zusätzliche Abstimmungen mit Design, gerade weil der UI-Repaint ja gestreckt wurde?"}
{"ts": "125:30", "speaker": "E", "text": "Ja, die Design-Gilde hat ein Microcopy-Update eingeführt: ein dezentes 'Daten werden aktualisiert'-Banner. Das war im DS-ATLAS v2 als temporärer Token komponiert, damit es per Feature Flag deaktiviert werden kann, sobald das Performance-Problem behoben ist."}
{"ts": "125:50", "speaker": "I", "text": "Interessant. Hat sich das Banner in Nutzertests positiv ausgewirkt?"}
{"ts": "125:56", "speaker": "E", "text": "Ja, die Fehlermeldungsquote in den Logs sank um 18%. Nutzer haben durch das Banner verstanden, dass kein Fehler vorliegt, sondern ein kurzer Sync."}
{"ts": "126:08", "speaker": "I", "text": "Wie kommunizieren Sie solche temporären Workarounds an Stakeholder, die mehr auf die Release-Deadlines schauen?"}
{"ts": "126:16", "speaker": "E", "text": "Wir dokumentieren das in RFC-ATL-118 mit einem klaren Sunset-Datum für das Feature Flag. In den Steering-Meetings betonen wir, dass es eine UX-Schadensbegrenzung ist, kein Dauerzustand."}
{"ts": "126:32", "speaker": "I", "text": "Gab es Gegenwind von der technischen Seite wegen des zusätzlichen Tokens im Design-System?"}
{"ts": "126:39", "speaker": "E", "text": "Ein Stück weit ja – das Performance-Team befürchtete mehr Overhead. Wir haben das Risiko in Ticket RSK-ATL-045 dokumentiert und mit Messdaten aus unserem Testbench widerlegt."}
{"ts": "126:53", "speaker": "I", "text": "Und abschließend: Welche Lessons Learned nehmen Sie aus dieser SLO-Überschreitung in die nächste Phase mit?"}
{"ts": "127:00", "speaker": "E", "text": "Früheres Load-Testing der Sync-Engine in Kombination mit UI-Elementen, engeres Monitoring auf Flag-bedingte UX-Änderungen und vor allem eine schnellere Rückkopplung zwischen QA, Dev und Design, um solche Trade-offs proaktiv zu managen."}
{"ts": "132:00", "speaker": "I", "text": "Können Sie noch einmal konkreter beschreiben, wie Sie im Pilotstadium von Atlas Mobile die UX-Ziele quantifiziert haben? Mich interessiert, ob diese Werte im DS-ATLAS v2 schon als Messkriterien hinterlegt sind."}
{"ts": "132:05", "speaker": "E", "text": "Ja, wir haben zu Beginn des Pilots drei Primärmetriken definiert: Task Completion Rate, Time-on-Task und Error-Free Rate. Diese wurden als Variablen in den DS-ATLAS v2 Token-Metadaten hinterlegt, sodass Komponenten in den Pilotbuilds automatisiert Log-Events ausgeben, die dann mit unseren QA-Dashboards korrelieren."}
{"ts": "132:12", "speaker": "I", "text": "Und wie verknüpfen Sie diese Log-Events mit Feature Flags? Mich interessiert, ob Sie Flag-Auswirkungen auf die Metriken direkt messen."}
{"ts": "132:17", "speaker": "E", "text": "Genau, wir nutzen ein internes Modul namens FlagMetricBinder. Das verknüpft jede Sitzung mit dem aktiven Flag-Set. Wenn wir zum Beispiel ein neues Button-Layout testen, sehen wir in den Metriken sofort, ob die Completion Rate sinkt. Das war besonders wichtig, als Feature Flag F-UX-233 kurzfristig aktiviert wurde."}
{"ts": "132:24", "speaker": "I", "text": "Gab es da nicht eine Situation, in der das neue Layout die Offline-Sync-Interaktion verschlechtert hat?"}
{"ts": "132:28", "speaker": "E", "text": "Ja, das ist der Multi-Hop-Effekt, den wir im Post-Mortem zu Ticket MOB-BUG-772 dokumentiert haben. Das geänderte Layout verschob den Sync-Indikator nach unten, was in Kombination mit schwacher Netzabdeckung dazu führte, dass Nutzer den Status nicht erkannten. Wir mussten daraufhin im RB-MOB-021 ergänzen, dass visuelle Sync-Hinweise in der oberen Bildschirmhälfte bleiben sollten."}
{"ts": "132:36", "speaker": "I", "text": "Interessant. Haben Sie diese Anpassung dann über ein weiteres Feature Flag ausgerollt?"}
{"ts": "132:40", "speaker": "E", "text": "Ja, Flag F-HOTFIX-019 hat den Sync-Indikator zurück in die Toolbar gebracht. Wir haben dies als Hotfix mit einer SLA von 48 Stunden unter SLA-UX-004 umgesetzt, um die Pilotgruppe nicht zu verlieren."}
{"ts": "132:47", "speaker": "I", "text": "Wie haben Sie das gegenüber den nicht-technischen Stakeholdern kommuniziert? Gerade, wenn die Änderung so kurzfristig war."}
{"ts": "132:52", "speaker": "E", "text": "Wir haben ein kurzes One-Pager-Briefing erstellt, das sowohl Screenshots before/after enthielt als auch eine vereinfachte Darstellung der Metrik-Verbesserung. Das war in Confluence unter STKH-UPDATE-Atlas/2024-03 hinterlegt und wurde in der wöchentlichen Stakeholder-Runde vorgestellt."}
{"ts": "132:59", "speaker": "I", "text": "Gab es in diesem Zuge auch Diskussionen über Priorisierung zwischen dieser UX-Verbesserung und anderen Release-Themen?"}
{"ts": "133:03", "speaker": "E", "text": "Ja, definitiv. Wir mussten RFC-UX-045 anpassen, um festzuhalten, dass der Hotfix trotz geplanter Backend-Optimierungen sofort priorisiert wird. Das Risiko, dass noch mehr Nutzer Sync-Probleme nicht sehen, wurde höher bewertet als der mögliche Delay beim Backend-Release."}
{"ts": "133:10", "speaker": "I", "text": "Und wie dokumentieren Sie solche Abwägungen langfristig?"}
{"ts": "133:14", "speaker": "E", "text": "Neben den RFCs führen wir ein Risk-Decision-Log gemäß POL-QA-014 Anhang C. Darin steht die getroffene Entscheidung, die beteiligten Parteien, die Metrik-Auswirkung und ein Link zum Ticket. Das hilft, wenn wir in späteren Phasen retrospektiv schauen, warum bestimmte UX-Weichenstellungen gemacht wurden."}
{"ts": "133:20", "speaker": "I", "text": "Letzte Frage: Hat diese Erfahrung Ihre generelle Heuristik im Umgang mit Feature Flags und UX geändert?"}
{"ts": "133:24", "speaker": "E", "text": "Absolut. Wir haben eine ungeschriebene Regel formuliert: 'Visual feedback elements must be flag-immune in critical flows.' Das heißt, Flags dürfen diese Elemente nicht verschieben oder ausblenden, es sei denn, es ist explizit in einem UX-RFC beschrieben und freigegeben."}
{"ts": "133:36", "speaker": "I", "text": "Bevor wir abschließen, möchte ich noch verstehen, wie Sie im Pilotstadium von Atlas Mobile konkret mit dem Thema Crash Loop Mitigation nach RB-MOB-021 umgegangen sind."}
{"ts": "133:48", "speaker": "E", "text": "Ja, RB-MOB-021 war für uns zentral, weil wir schon in den ersten Beta-Builds vereinzelt Endlosschleifen beim Reconnect hatten. Wir haben UX-seitig einen Fallback-Screen eingebaut, der den Nutzer aktiv informiert und gleichzeitig Telemetrie an unser Monitoring sendet."}
{"ts": "134:05", "speaker": "I", "text": "Und diese Telemetrie, wird die auch an QA weitergeleitet?"}
{"ts": "134:09", "speaker": "E", "text": "Genau, wir pushen die Events über unser internes EventBus-Framework in das QA-Dashboard. Dort werden sie mit den betroffenen Testfällen aus POL-QA-014 verknüpft, sodass Traceability gesichert ist."}
{"ts": "134:24", "speaker": "I", "text": "Gab es dabei Abhängigkeiten zu Ihren Feature Flags im Design-System?"}
{"ts": "134:30", "speaker": "E", "text": "Ja, tatsächlich. Wir haben die neue Token-Farbpalette für den Offline-Hinweis zunächst hinter einem Flag 'ux.offlineBannerV2' getestet. Das lief parallel zu den Mitigation-Maßnahmen, um zu sehen, ob die neue Farbgebung im Stressfall besser wahrgenommen wird."}
{"ts": "134:48", "speaker": "I", "text": "Wie haben Sie das evaluiert?"}
{"ts": "134:52", "speaker": "E", "text": "Wir haben A/B-Tests gefahren: Gruppe A mit dem alten Banner, Gruppe B mit der neuen Farbpalette. Die KPI war die Zeit bis zur Nutzeraktion 'Retry Sync'. Das lief über unseren internen Test-Orchestrator, der auch die Feature Flags toggeln kann."}
{"ts": "135:10", "speaker": "I", "text": "Gab es signifikante Unterschiede?"}
{"ts": "135:14", "speaker": "E", "text": "Ja, B war im Median 1,3 Sekunden schneller. Das klingt wenig, aber bei kritischen Geschäftsprozessen summiert sich das. Wir haben das Ergebnis in Ticket UX-5412 dokumentiert und die Freigabe mit den Stakeholdern per RFC-ATLAS-23-17 abgestimmt."}
{"ts": "135:34", "speaker": "I", "text": "Im RFC, wie haben Sie das Risiko beschrieben?"}
{"ts": "135:38", "speaker": "E", "text": "Wir haben zwei Risiken aufgeführt: erstens, dass die neue Farbpalette in anderen Kontexten weniger Kontrast bietet; zweitens, dass das Flagging im Produktivbetrieb versehentlich deaktiviert wird. Zur Absicherung ist im Runbook MOB-RB-UX-002 eine wöchentliche Flag-Status-Prüfung festgelegt."}
{"ts": "135:58", "speaker": "I", "text": "Haben Sie dazu auch SLAs oder SLOs für die Offline-Funktion vereinbart?"}
{"ts": "136:03", "speaker": "E", "text": "Ja, im SLO-Dokument SLO-ATL-UX-Offline steht, dass die App im Offline-Modus 98% der Kernaktionen ohne Fehlermeldung ermöglichen muss und der Sync nach Wiederverbindung innerhalb von 5 Sekunden starten muss."}
{"ts": "136:18", "speaker": "I", "text": "Und wie kommunizieren Sie das an nicht-technische Stakeholder?"}
{"ts": "136:23", "speaker": "E", "text": "Wir visualisieren die Erfüllung der SLOs in einem quartalsweisen UX-Report mit Ampelfarben und kurzen Use-Case-Stories. So sehen auch fachfremde Entscheider schnell, ob wir im grünen Bereich sind oder Handlungsbedarf besteht."}
{"ts": "145:36", "speaker": "I", "text": "Lassen Sie uns nochmal auf die Interaktion zwischen dem Offline-Sync und den Feature Flags eingehen. Wie stellen Sie sicher, dass ein per Flag deaktiviertes Modul nicht unbeabsichtigt den Sync-Mechanismus blockiert?"}
{"ts": "145:41", "speaker": "E", "text": "Wir haben dafür in der Sync-Pipeline eine Condition-Liste hinterlegt, die in RB-SYNC-042 dokumentiert ist. Dort wird bei jedem Start der App geprüft, ob ein Feature Flag, das auf den Offline-Sync einwirkt, inaktiv ist. Falls ja, verwenden wir einen Fallback-Handler, der aus der DS-ATLAS v2 Library den generischen Synchronisierungs-Adapter lädt."}
{"ts": "145:49", "speaker": "I", "text": "Gab es schon mal einen Fall, bei dem dieser Fallback nicht gegriffen hat?"}
{"ts": "145:53", "speaker": "E", "text": "Ja, im Ticket MOB-7124. Da war der Flag 'sync-lite' deaktiviert, aber ein neuer Token aus der Design-System-Bibliothek erwartete dennoch Daten aus der lite-Sync-Queue. Das führte zu einem verzögerten Rendering. Wir haben das in Release 1.5.3 behoben, indem wir den Token-Loader mit einem Null-Object-Pattern abgesichert haben."}
{"ts": "146:02", "speaker": "I", "text": "Und wie kommunizieren Sie solche Zwischenfälle an das QA-Team, damit die Traceability gewährleistet bleibt?"}
{"ts": "146:07", "speaker": "E", "text": "Wir hängen das Ursprungs-Ticket an die Testfall-ID in TestRail an und referenzieren in POL-QA-014 Kapitel 5.3. Zusätzlich gibt es einen kurzen Eintrag in unserem wöchentlichen QA-Sync-Report, damit es auch für Nicht-Entwickler transparent ist."}
{"ts": "146:14", "speaker": "I", "text": "Wie gehen Sie bei der Priorisierung vor, wenn ein UX-Bug zwar kritisch für die User Experience ist, aber nicht für die funktionale SLA?"}
{"ts": "146:19", "speaker": "E", "text": "Wir nutzen eine Matrix: Impact auf UX vs. Impact auf SLA. Selbst wenn SLA nicht verletzt wird, kann ein hoher UX-Impact dazu führen, dass wir es in die 'Hotfix-Queue' aufnehmen. Das war z. B. bei MOB-7199 der Fall, wo während eines Offline-Zustands ein falsches Icon für die Sync-Statusanzeige erschien."}
{"ts": "146:28", "speaker": "I", "text": "Interessant. Und wie validieren Sie, dass nach einem solchen Hotfix die Accessibility-Anforderungen noch erfüllt sind?"}
{"ts": "146:33", "speaker": "E", "text": "Wir fahren ein Accessibility-Smoke-Test-Skript, das wir in RB-ACC-005 beschrieben haben. Das prüft Kontrast, Screenreader-Lesbarkeit und Touch-Target-Größen. Diese Checks laufen automatisiert in der CI-Pipeline nach jedem Merge ins Pilot-Branch."}
{"ts": "146:41", "speaker": "I", "text": "Gab es dabei schon Konflikte mit Terminzielen, z. B. dass ein Accessibility-Fix einen Release verzögert hat?"}
{"ts": "146:46", "speaker": "E", "text": "Ja, beim Pilot-Release 1.4.0. Wir hatten eigentlich ein festes Go-Live-Fenster, aber der Screenreader las den Offline-Status nicht korrekt vor. Der Fix war minimalinvasiv, aber musste noch nach POL-QA-014 getestet werden. Wir haben den Release um zwei Tage verschoben, was im RFC-ATL-017 begründet ist."}
{"ts": "146:55", "speaker": "I", "text": "Hat das zu Spannungen mit Stakeholdern geführt?"}
{"ts": "147:00", "speaker": "E", "text": "Ein wenig, ja. Produktmanagement wollte den Pilot pünktlich starten, aber wir haben klar kommuniziert, dass ein nicht funktionierender Screenreader bei Netzwerkausfall ein inakzeptables Risiko darstellt. Wir haben dazu eine Risikoanalyse nach RSK-UX-002 erstellt und im Steering Committee vorgestellt."}
{"ts": "147:08", "speaker": "I", "text": "Und wie fließen solche Lessons Learned später in das Design-System ein?"}
{"ts": "147:13", "speaker": "E", "text": "Wir ergänzen im DS-ATLAS v2 die Token-Dokumentation um ein 'Accessibility Constraints'-Feld. Damit wird bei jedem neuen UI-Element automatisch geprüft, ob bekannte Risiken – wie bei MOB-7199 – schon ausgeschlossen sind, bevor es per Feature Flag live geht."}
{"ts": "146:12", "speaker": "I", "text": "Lassen Sie uns noch einmal auf das DS-ATLAS v2 eingehen – wie haben Sie die Tokenized Components konkret in den Pilot-Build von Atlas Mobile integriert?"}
{"ts": "146:19", "speaker": "E", "text": "Wir haben in Sprint 14 ein dediziertes UI-Refactoring durchgeführt, bei dem alle primären Bedienelemente – Buttons, Input-Felder, Modals – durch die v2 Tokens ersetzt wurden. Die Werte für Farb- und Typografie-Token stammen direkt aus unserem zentralen DS-Repository, das via CI-Pipeline ins App-Projekt gepullt wird."}
{"ts": "146:33", "speaker": "I", "text": "Gab es dabei Abhängigkeiten, die Sie besonders im Blick behalten mussten?"}
{"ts": "146:38", "speaker": "E", "text": "Ja, insbesondere mit den Feature Flags. Wir hatten ein Flag `ff-new-modal-theme` im Staging aktiv, um unterschiedliche Farbsets zu testen. Das Problem war, dass bei deaktiviertem Flag nicht alle Token korrekt zurückfielen, was temporär zu Inkonsistenzen führte."}
{"ts": "146:52", "speaker": "I", "text": "Wie haben Sie das behoben – gab es einen Workaround oder eine Anpassung im Build?"}
{"ts": "146:58", "speaker": "E", "text": "Wir haben einen Fallback-Mechanismus in den Token-Resolver eingebaut, dokumentiert in Ticket UX-4512. Er prüft bei fehlenden v2-Werten auf v1-Defaults zurück, bevor das UI rendert."}
{"ts": "147:09", "speaker": "I", "text": "Und wie testen Sie solche Fallbacks, um nicht wieder in so einen Zustand zu kommen?"}
{"ts": "147:15", "speaker": "E", "text": "Wir haben im QA-Runbook RB-UI-033 jetzt einen Abschnitt, der gezielt alle Feature-Flag-Kombinationen durchspielt. Das ist Teil der Traceability, weil jeder UX-Token-Testfall mit einer Anforderung aus der UX-Spezifikation verknüpft ist."}
{"ts": "147:28", "speaker": "I", "text": "Sie hatten vorhin Offline-Sync und Fehlertoleranz erwähnt. Wurde RB-MOB-021 auch auf Token-Ebene relevant?"}
{"ts": "147:35", "speaker": "E", "text": "Indirekt, ja. Wenn während des Offline-Modus ein UI-Update geladen wird, muss der Token-Cache stabil bleiben. RB-MOB-021 sieht vor, dass bei Crash-Loops die App mit Minimal-UI hochfährt – das heißt nur Basistokens, keine experimentellen Flags."}
{"ts": "147:50", "speaker": "I", "text": "Gab es eine Situation, in der diese Minimal-UI tatsächlich live ging?"}
{"ts": "147:55", "speaker": "E", "text": "Ja, im Pilot-Release 0.9.3, als ein fehlerhafter Token für den Dark-Mode einen Crash im Render-Thread auslöste. Innerhalb von 2 Minuten wurde das Flag serverseitig deaktiviert, und der Minimal-UI-Fallback sprang an, laut Log ID CR-90877."}
{"ts": "148:09", "speaker": "I", "text": "Wie haben Sie diesen Incident den Stakeholdern erklärt?"}
{"ts": "148:14", "speaker": "E", "text": "Wir haben ein kurzes Post-Mortem in einfacher Sprache verfasst, ergänzt mit Screenshots der Minimal-UI, und in Confluence unter dem RFC-Thread RFC-UX-009 verlinkt. Wichtig war, die schnelle Wiederherstellung hervorzuheben, um das Vertrauen zu sichern."}
{"ts": "148:27", "speaker": "I", "text": "Sehen Sie darin ein Risiko für die finale Rollout-Phase?"}
{"ts": "148:32", "speaker": "E", "text": "Definitiv. Wir haben jetzt eine SLA für Token-Deployment definiert: max. 5 Sekunden Propagation Delay und automatisierte Rollback-Option. Das mindert das Risiko, dass solche UX-Ausfälle im Live-Betrieb länger sichtbar bleiben."}
{"ts": "149:12", "speaker": "I", "text": "Lassen Sie uns direkt an die DS-ATLAS v2 Integration anschließen. Wie stellen Sie sicher, dass diese Tokenized Components wirklich durchgängig in allen Modulen von Atlas Mobile angewendet werden?"}
{"ts": "149:18", "speaker": "E", "text": "Wir haben dafür einen automatisierten Linter im CI, der auf unsere internen Style-Tokens matcht. Zudem nutzen wir ein Pre-commit-Hook, das Abweichungen vom DS-ATLAS v2 sofort anzeigt. Das ist seit Sprint 14 verpflichtend."}
{"ts": "149:27", "speaker": "I", "text": "Gab es Fälle, wo das System falsch-positiv reagiert hat und den Build blockierte?"}
{"ts": "149:31", "speaker": "E", "text": "Ja, in Ticket UX-BLD-077 hatten wir einen Konflikt, weil ein neues Icon aus der DS-Beta nicht im Token-Katalog war. Wir mussten den Linter kurzzeitig im Branch deaktivieren und nachträglich den Token ergänzen."}
{"ts": "149:42", "speaker": "I", "text": "Und wie haben Sie diese Ausnahme dokumentiert, um sie rückverfolgbar zu machen?"}
{"ts": "149:47", "speaker": "E", "text": "Wir haben im Ausnahmeprotokoll des QA-Boards einen Eintrag gemäß POL-QA-014 angelegt. Dort ist die Begründung, der Commit-Hash und der Link zum aktualisierten Token-Set hinterlegt."}
{"ts": "149:56", "speaker": "I", "text": "Feature Flags – wie verzahnen Sie die mit dem Design-System beim Testen neuer UI-Patterns?"}
{"ts": "150:02", "speaker": "E", "text": "Für neue Patterns setzen wir ein 'ds_preview' Flag. Das erlaubt uns, die DS-ATLAS v2 Komponenten nur für interne Testgruppen zu aktivieren. So können wir A/B-Feedback sammeln, ohne das Live-UI zu destabilisieren."}
{"ts": "150:13", "speaker": "I", "text": "Gab es negative UX-Effekte durch solche Flags?"}
{"ts": "150:17", "speaker": "E", "text": "In einem Fall, FF-UX-012, hat das Flag bei einer Teilgruppe die Button-Hierarchie verändert, was zu Verwirrung führte. Da haben wir innerhalb von 4 Stunden das Flag wieder ausgerollt. Fehleranalyse zeigte fehlende Alignment-Tests."}
{"ts": "150:29", "speaker": "I", "text": "Wie fließt so ein Vorfall in Ihre Qualitätssicherung zurück?"}
{"ts": "150:33", "speaker": "E", "text": "Wir haben daraus einen zusätzlichen Testfall im Regression-Suite angelegt, verlinkt mit der ursprünglichen UX-Anforderung AT-UX-REQ-045 und dem FF-UX-012 Incident. Das ist in TestRail mit beiden IDs getaggt."}
{"ts": "150:45", "speaker": "I", "text": "Sie haben vorhin Automation erwähnt. Wird das auch für visuelle Regression eingesetzt?"}
{"ts": "150:49", "speaker": "E", "text": "Ja, wir nutzen ein internes Tool 'VisDiff', das Screenshots unter verschiedenen Flags vergleicht. Es prüft Token-Farben, Spacing und Iconography. Abweichungen über 2% Pixel-Diff werden geblockt."}
{"ts": "150:59", "speaker": "I", "text": "Interessant. Und wie stimmen Sie solche QA-Ergebnisse mit den Stakeholdern ab, wenn es um visuell heikle Änderungen geht?"}
{"ts": "151:04", "speaker": "E", "text": "Wir präsentieren in den wöchentlichen UX-Review-Calls die VisDiff-Reports, markieren kritische Deltas und holen Freigaben ein. Manchmal eskalieren wir an das Product Board, wenn die Abweichung bewusst toleriert werden soll."}
{"ts": "150:48", "speaker": "I", "text": "Lassen Sie uns jetzt noch einmal gezielt auf die Offline-Sync-Mechanismen eingehen. Wie genau stellen Sie sicher, dass Nutzer während längerer Netzwerkausfälle nicht in einen unklaren Zustand geraten?"}
{"ts": "150:52", "speaker": "E", "text": "Wir haben ein mehrstufiges UX-Pattern implementiert: Zunächst gibt es einen persistierenden Banner mit einem klaren Status, der aus der Sync-Engine gespeist wird. Dann, bei wiederholten Sync-Fehlern, schaltet sich der 'Retry-Scheduler' gemäß RB-MOB-021 in den Safe Mode, um Crash-Loops zu vermeiden."}
{"ts": "150:58", "speaker": "I", "text": "Und wie kommunizieren Sie diesen Safe Mode an den Nutzer, ohne dass es übermäßig technisch wirkt?"}
{"ts": "151:02", "speaker": "E", "text": "Wir haben vereinfachte Texte im DS-ATLAS v2 Content-Token hinterlegt, die aus der Error-Klasse 'OFFLINE_SAFE' generiert werden. So sehen User einen Hinweis wie 'Synchronisation pausiert – wir versuchen es später erneut', ohne dass interne Begriffe vorkommen."}
{"ts": "151:08", "speaker": "I", "text": "Gab es definierte SLAs oder SLOs für diese Offline-Funktionalität, die Sie in der Pilotphase einhalten mussten?"}
{"ts": "151:12", "speaker": "E", "text": "Ja, laut SLA-UX-OFF-001 müssen 95 % der Offline-Operationen innerhalb von 500 ms lokal bestätigt werden. Das SLO für die Sync-Wiederaufnahme liegt bei höchstens 2 Minuten nach Netzwerkwiederkehr."}
{"ts": "151:18", "speaker": "I", "text": "Wie wird die Einhaltung dieser Ziele überwacht?"}
{"ts": "151:22", "speaker": "E", "text": "Wir loggen jeden Offline-Transition-Event mit einer UUID in unser QA-Dashboard und korrelieren das mit den Testruns aus TC-OFF-045 bis TC-OFF-059, die direkt auf die UX-Anforderungen aus POL-QA-014 mappen."}
{"ts": "151:28", "speaker": "I", "text": "Kommen wir zu QA-Prozessen: Gab es Konflikte zwischen der Erfüllung dieser UX-Anforderungen und engen Release-Deadlines?"}
{"ts": "151:32", "speaker": "E", "text": "Ja, insbesondere beim Patch 1.3. Wir hätten eigentlich drei zusätzliche Exploratory-Tests für den Offline-Sync fahren müssen, aber das Release-Ticket REL-ATL-078 war durch den Stakeholder-Review schon freigegeben. Wir haben dann einen QA-Deferral im Ticket dokumentiert."}
{"ts": "151:38", "speaker": "I", "text": "Wie gehen Sie mit der Dokumentation solcher Deferrals um, um später Rückverfolgbarkeit zu gewährleisten?"}
{"ts": "151:42", "speaker": "E", "text": "Wir verlinken den QA-Deferral in Confluence mit dem ursprünglichen UX-Requirement-ID UXR-ATL-OFF-02 und hinterlegen eine Notiz im RFC-Log. Damit ist klar, warum das Testing verschoben wurde und wann es nachgeholt werden muss."}
{"ts": "151:48", "speaker": "I", "text": "Gab es Fälle, in denen Sie eine UX-Entscheidung gegen eine technische Empfehlung getroffen haben, speziell beim Offline-Handling?"}
{"ts": "151:52", "speaker": "E", "text": "Ja, beim Thema 'Conflict Resolution'. Technisch wäre ein automatisches Merge der Offline-Daten robuster gewesen, aber wir haben uns aus UX-Sicht für einen manuell geführten Dialog entschieden, um den User mehr Kontrolle zu geben. Das ist im RFC-ATL-233 mit den Pro- und Contra-Punkten dokumentiert."}
{"ts": "151:58", "speaker": "I", "text": "Wie haben Sie dieses Risiko den nicht-technischen Stakeholdern vermittelt?"}
{"ts": "152:02", "speaker": "E", "text": "Wir haben ein Mockup-Video erstellt, das beide Varianten zeigt, und im Steering-Committee vorgestellt. Das half, die Entscheidung transparent zu machen und die potenziellen Support-Aufwände, die im Ticket SUP-ATL-019 prognostiziert wurden, abzuwägen."}
{"ts": "152:08", "speaker": "I", "text": "Wir hatten ja die Crash Loop Mitigation bereits angerissen – mich interessiert jetzt, wie Sie im Pilotstadium die Abhängigkeit zwischen Offline-Sync und dem DS-ATLAS v2 Design-System konkret operationalisiert haben."}
{"ts": "152:13", "speaker": "E", "text": "Ja, ähm, wir haben dafür im Build-Branch P-ATL/feat-offline-ui eine Verbindung hergestellt: die Tokenized Components aus DS-ATLAS v2 wurden so erweitert, dass sie Status-Icons und Sync-Progress-Bars beinhalten. Dadurch bleibt die UI konsistent, selbst wenn der Sync-Service im RB-MOB-021 Modus läuft."}
{"ts": "152:21", "speaker": "I", "text": "Und diese Erweiterungen laufen ebenfalls unter Feature Flag?"}
{"ts": "152:25", "speaker": "E", "text": "Genau, wir nutzen das Flag atlas.offlineUX.beta. Das erlaubt uns, nur einer begrenzten Nutzergruppe die geänderten Komponenten auszurollen und gleichzeitig in den QA-Pipelines gezielt Testfälle gem. POL-QA-014 zu triggern."}
{"ts": "152:33", "speaker": "I", "text": "Wie messen Sie, ob diese Kombination tatsächlich die UX verbessert?"}
{"ts": "152:37", "speaker": "E", "text": "Wir haben im KPI-Set für den Piloten drei Metriken ergänzt: Time-to-Visible-Sync, Error-Recovery-Rate und die subjektive UX-Scores aus In-App-Surveys. Die Daten landen im Dashboard UX-MON-07, wo wir auch Flag-on vs. Flag-off vergleichen."}
{"ts": "152:46", "speaker": "I", "text": "Gab es Fälle, wo diese Kopplung Probleme verursacht hat?"}
{"ts": "152:50", "speaker": "E", "text": "Einmal, ja – Ticket UXB-1123. Da hat die Progress-Bar bei Verbindungsabbrüchen falsche Werte angezeigt, weil der Offline-Queue-Handler und das UI-Token-Update asynchron liefen. Wir haben das im Runbook RB-MOB-021 Abschnitt 4.3 ergänzt."}
{"ts": "152:59", "speaker": "I", "text": "Wie wurde dieser Fix priorisiert?"}
{"ts": "153:03", "speaker": "E", "text": "Über unser Tool QualiTrace. Da UXB-1123 als 'Pilot-Blocker' markiert war, hat es automatisch eine SLA von 48 Stunden gemäß QA-Policy gezogen. Wir mussten also andere nicht-kritische UX-Verbesserungen verschieben."}
{"ts": "153:11", "speaker": "I", "text": "Das klingt nach einem klassischen Trade-off – wie haben Sie den Stakeholdern das kommuniziert?"}
{"ts": "153:15", "speaker": "E", "text": "In RFC-ATL-45 haben wir das dokumentiert: Abschnitt 2.1 beschreibt den UX-Impact, Abschnitt 3.4 die technischen Risiken, wenn wir warten würden. Wir haben es im Steering-Call mit Screenshots und KPI-Grafen untermauert."}
{"ts": "153:24", "speaker": "I", "text": "Gab es Gegenstimmen, das zu verschieben?"}
{"ts": "153:28", "speaker": "E", "text": "Ein Produktmanager wollte den Fix nach hinten schieben, um ein Marketing-Feature rechtzeitig zu launchen. Aber nach Sichtung der UX-Fehlerquote von 27% bei Flag-on-Usern hat er eingelenkt."}
{"ts": "153:36", "speaker": "I", "text": "Das heißt, die Entscheidung war datengetrieben?"}
{"ts": "153:40", "speaker": "E", "text": "Absolut. Ohne die Traceability von UX-Anforderung → Testfall → KPI hätten wir das nicht so klar belegen können. Das ist einer dieser Fälle, wo unsere QA- und UX-Prozesse perfekt ineinandergreifen."}
{"ts": "153:34", "speaker": "I", "text": "Bevor wir weitergehen, würde mich interessieren, wie Sie im Pilotstadium von Atlas Mobile die Balance zwischen neuen Features und technischer Stabilität gewichten."}
{"ts": "153:39", "speaker": "E", "text": "Das ist ehrlich gesagt ein ständiger Balanceakt. Wir haben intern die Regel, dass keine mehr als zwei große Feature Flags gleichzeitig im Pilot aktiv sind, um das Risiko für Regressionen gering zu halten."}
{"ts": "153:45", "speaker": "I", "text": "Gibt es dafür eine formale Vorgabe oder ist das eher eine implizite Heuristik?"}
{"ts": "153:49", "speaker": "E", "text": "Teilweise formalisiert. In POL-FLG-003 ist festgehalten, dass bei Pilot-Phasen eine Obergrenze definiert wird. Aber das Feintuning kommt aus Erfahrungswerten voriger Projekte wie 'Orion App'."}
{"ts": "153:56", "speaker": "I", "text": "Und wie stellen Sie sicher, dass das Design-System DS-ATLAS v2 dabei konsistent integriert bleibt?"}
{"ts": "154:02", "speaker": "E", "text": "Wir nutzen ein Pre-merge Linter-Tool, das die Tokenized Components prüft. Wenn ein Feature Flag eine neue Komponente einführt, wird automatisch gegen die DS-ATLAS v2 Tokens validiert."}
{"ts": "154:10", "speaker": "I", "text": "Hatten Sie schon einen Fall, wo das zu einer Verzögerung geführt hat?"}
{"ts": "154:14", "speaker": "E", "text": "Ja, Ticket UXBUG-4827. Da wurde ein Button-Token falsch angewendet. Das Linter-Blocking hat den Merge gestoppt und wir mussten das Flag erst patchen."}
{"ts": "154:21", "speaker": "I", "text": "Interessant. Wie kommunizieren Sie solche Verzögerungen an Stakeholder, gerade wenn es das Pilotrelease betrifft?"}
{"ts": "154:27", "speaker": "E", "text": "Wir haben ein wöchentliches Pilot-Standup mit Produkt- und UX-Vertretern. Dort zeigen wir die Blocker aus dem QA-Report an und verlinken direkt auf die betroffenen Jira-Tickets."}
{"ts": "154:34", "speaker": "I", "text": "Gab es Situationen, wo Sie bewusst ein UX-Issue toleriert haben, um einen Termin zu halten?"}
{"ts": "154:38", "speaker": "E", "text": "Ja, zum Beispiel in RFC-ATL-119. Wir haben eine leicht inkonsistente Animation im Offline-Sync-Status belassen, weil der Fix die Crash Loop Mitigation tangiert hätte."}
{"ts": "154:46", "speaker": "I", "text": "Das klingt nach einem Risikoabwägungsthema. Wie haben Sie das dokumentiert?"}
{"ts": "154:50", "speaker": "E", "text": "Im RFC selbst steht ein Abschnitt 'Risk Acceptance', dazu ein Verweis auf Runbook RB-MOB-021, um klarzustellen, dass die technische Stabilität höher priorisiert wurde."}
{"ts": "154:57", "speaker": "I", "text": "Rückblickend, war das die richtige Entscheidung?"}
{"ts": "155:00", "speaker": "E", "text": "Ja, weil wir so die SLA von 99,5% für Offline-Verfügbarkeit im Pilot einhalten konnten. Die Nutzer haben die Animation kaum bemerkt, aber einen Crash hätten sie sofort gespürt."}
{"ts": "155:00", "speaker": "I", "text": "Lassen Sie uns noch kurz auf das Thema DS-ATLAS v2 eingehen – wie stellen Sie sicher, dass neue Tokenized Components wirklich in allen Feature-Flag-Konfigurationen konsistent gerendert werden?"}
{"ts": "155:05", "speaker": "E", "text": "Wir haben im Build-Pipeline einen automatisierten Visual Regression Check, der auf den DS-ATLAS v2 Tokens basiert. Jede Feature-Flag-Variante wird gegen einen Golden Master geprüft, um Abweichungen vor Release zu erkennen. Das ist in unserem internen Runbook RB-UI-034 dokumentiert."}
{"ts": "155:18", "speaker": "I", "text": "Gab es denn schon mal einen Fall, wo dieser Check etwas Kritisches gefunden hat?"}
{"ts": "155:23", "speaker": "E", "text": "Ja, im Ticket UXBUG-882 im Januar hat der Check ein Padding-Mismatch zwischen zwei Flag-Varianten entdeckt, was in kleineren Viewports zu abgeschnittenen Buttons führte. Ohne den Check wäre das vermutlich erst im Pilot aufgefallen."}
{"ts": "155:36", "speaker": "I", "text": "Und wie schnell konnten Sie das beheben, ohne den Pilot zu verzögern?"}
{"ts": "155:40", "speaker": "E", "text": "Wir haben das Flag temporär deaktiviert, den Component-Token in DS-ATLAS v2.3.1 gefixt und innerhalb von zwei Tagen wieder aktiviert. Die QA konnte das über POL-QA-014 sofort rückverfolgen, weil das Ticket mit dem UX-Requirement verlinkt war."}
{"ts": "155:55", "speaker": "I", "text": "Beim Offline-Sync: Wie wird sichergestellt, dass eine Änderung im Design-System nicht unbeabsichtigt die Offline-Indikatoren verändert?"}
{"ts": "156:00", "speaker": "E", "text": "Wir haben dafür in RB-MOB-045 eine 'UI Critical State' Liste, die Offline-Icons, Sync-Statusleisten und Fehlermeldungen enthält. Jede Änderung an diesen Komponenten triggert einen manuellen Review durch das UX-Team, egal welches Feature Flag aktiv ist."}
{"ts": "156:15", "speaker": "I", "text": "Das klingt nach einem Multi-Hop zwischen Design, Feature Flags und Offline-Funktion. Wie priorisieren Sie, wenn z.B. ein neues Icon-Set und ein Offline-Bug gleichzeitig kommen?"}
{"ts": "156:20", "speaker": "E", "text": "Wir nutzen dazu unser Priorisierungsboard in Jira: Kritische Offline-Bugs mit SLA-Breach-Risiko (SLO: 99% erfolgreiche Offline-Sync-Zyklen im 24h Fenster) haben Vorrang. Neue Icons werden dann entweder zurückgestellt oder nur in nicht-betroffenen Screens ausgerollt."}
{"ts": "156:35", "speaker": "I", "text": "Wie kommunizieren Sie solche Verschiebungen an Stakeholder, die vielleicht nur das neue Icon sehen wollen?"}
{"ts": "156:39", "speaker": "E", "text": "Wir erstellen ein kurzes Impact-Assessment, verlinken die betroffenen SLOs und die relevanten RFCs, und führen ein 15-min Sync-Meeting durch. So verstehen auch nicht-technische Stakeholder, warum ein UX-Update warten muss."}
{"ts": "156:52", "speaker": "I", "text": "Gab es eine Situation, wo Sie trotz eines kleinen SLO-Risikos das UX-Update vorgezogen haben?"}
{"ts": "156:56", "speaker": "E", "text": "Ja, im März, RFC-ATL-056: Wir haben ein Accessibility-Update für Screenreader vorgezogen, obwohl ein Minor Retry-Bug bei Offline-Sync noch offen war. Das Risiko haben wir dokumentiert, weil die Accessibility-Verbesserung für den Pilot-Use-Case mit öffentlichen Behörden entscheidend war."}
{"ts": "157:10", "speaker": "I", "text": "Wie wurde das Risiko letztlich bewertet und ist es eingetreten?"}
{"ts": "157:14", "speaker": "E", "text": "Das Risiko wurde als 'Low Impact' eingestuft, mit Workaround im Runbook RB-MOB-021 beschrieben. Es ist nicht eingetreten – der Retry-Bug trat nur in 0,02% der Sessions auf, was unterhalb unseres Acceptable Error Threshold laut POL-QA-014 liegt."}
{"ts": "160:00", "speaker": "I", "text": "Lassen Sie uns noch einmal auf die Testabdeckung eingehen: Haben Sie für die Atlas Mobile Pilotphase spezielle UX-Test-Suites angelegt, die auf die neuen Feature Flags zugeschnitten sind?"}
{"ts": "160:05", "speaker": "E", "text": "Ja, wir haben in TestRail ein separates Suite-Set 'UX-FF-Pilot' erstellt, das gezielt die DS-ATLAS v2 Tokenized Components unter aktivierten und deaktivierten Flags prüft. Die Tests sind mit den Jira-Tickets der Stories verlinkt, sodass die Traceability zu POL-QA-014 erfüllt bleibt."}
{"ts": "160:14", "speaker": "I", "text": "Und wie stellen Sie sicher, dass diese Tests bei kurzfristigen Flag-Änderungen aktuell bleiben?"}
{"ts": "160:18", "speaker": "E", "text": "Wir haben im Runbook RB-QA-034 festgelegt, dass jedes Flag-Change-Request ein Hook-Event in unserem CI auslöst. Dieses triggert einen Smoke-Test-Lauf der relevanten UX-Szenarien, bevor das Flag produktiv geht."}
{"ts": "160:28", "speaker": "I", "text": "Gab es bei diesem Prozess schon mal einen Fehlalarm oder false positive, der die Auslieferung verzögert hat?"}
{"ts": "160:32", "speaker": "E", "text": "Einmal, ja: Bei Ticket MOB-572 hatten wir einen Staging-Konfigurationsfehler, der einen Offline-Sync-Test fehlschlagen ließ, obwohl die Komponente korrekt funktionierte. Wir haben daraus gelernt, indem wir die Staging-Profile stärker an die Produktion angleichen."}
{"ts": "160:44", "speaker": "I", "text": "Interessant. Wie kommunizieren Sie solche Lessons Learned an das restliche Team?"}
{"ts": "160:47", "speaker": "E", "text": "Wir halten alle zwei Wochen ein \u001eUX & QA Sync\u001f Meeting, dort wird in einem Confluence-Abschnitt 'Pilot Incidents' jeder Vorfall mit Ursache, Auswirkung und Fix dokumentiert. So haben auch die Stakeholder eine transparente Sicht."}
{"ts": "160:57", "speaker": "I", "text": "Welche Rolle spielen hier die nicht-technischen Stakeholder, z.B. Marketing, in Bezug auf UX-Änderungen?"}
{"ts": "161:01", "speaker": "E", "text": "Marketing achtet stark auf die visuelle Konsistenz und Messaging. Deshalb stimmen wir Design-Änderungen mit Feature Flags so ab, dass Branding-Elemente zuerst in internen Beta-Kanälen aktiviert werden, um Feedback zu sammeln, bevor die breite Pilotgruppe sie sieht."}
{"ts": "161:13", "speaker": "I", "text": "Klingt nach einem guten Balanceakt. Gab es Fälle, wo Marketing schneller live gehen wollte als QA es zuließ?"}
{"ts": "161:17", "speaker": "E", "text": "Ja, bei der Einführung des neuen Icon-Sets (Flag FF-ICON-V2) drängte Marketing auf sofortige Freigabe. Wir mussten jedoch aufgrund von Accessibility-Bedenken aus RB-A11Y-005 zwei Wochen Verzögerung einplanen, um Farbkontraste nachzubessern."}
{"ts": "161:30", "speaker": "I", "text": "Wie haben Sie diesen Trade-off dokumentiert?"}
{"ts": "161:33", "speaker": "E", "text": "In RFC-UX-044 haben wir alle beteiligten Teams, die identifizierten Risiken und die beschlossene Verzögerung festgehalten. Das Ticket enthält auch Screenshots vor/nach der Anpassung und den Accessibility-Testbericht."}
{"ts": "161:44", "speaker": "I", "text": "Abschließend: Welche Risiken sehen Sie noch, wenn Atlas Mobile aus dem Pilot in den Rollout geht, speziell UX-seitig?"}
{"ts": "161:48", "speaker": "E", "text": "Das größte Risiko ist aus meiner Sicht die Skalierung der Offline-Sync-Mechanismen unter hoher Last. Wenn wir die in RB-MOB-021 definierten Crash Loop Mitigations nicht rechtzeitig anpassen, könnten Nutzer in Grenzregionen Datenverluste erleben. Wir haben deshalb ein pre-rollout Load-Testing geplant, um UX-SLOs für Offline-Betrieb zu validieren."}
{"ts": "161:36", "speaker": "I", "text": "Lassen Sie uns nochmal auf die SLAs der Offline-Funktionalität eingehen: Wie konkret messen Sie, ob diese im Pilotstadium eingehalten werden?"}
{"ts": "161:42", "speaker": "E", "text": "Wir haben dafür in der Runbook-Doku RB-MOB-045 einen Abschnitt 'Offline SLA Monitoring'. Dort ist definiert, dass mindestens 95 % der Sync-Versuche innerhalb von 30 Sekunden nach Netzrückkehr abgeschlossen sein müssen. Die Messpunkte werden über unser internes Telemetrie-Tool AtlasTrace erfasst."}
{"ts": "161:57", "speaker": "I", "text": "Und wenn diese 95 % nicht erreicht werden – gibt es dann einen automatisierten Eskalationsprozess?"}
{"ts": "162:03", "speaker": "E", "text": "Ja, dann wird automatisch ein Ticket im JIRA-Board 'MOB-QA' mit dem Label 'SLA-Breach' erstellt. Das triggert in unserem Incident-Prozess gemäß POL-QA-021 eine Root-Cause-Analyse binnen 48 Stunden."}
{"ts": "162:15", "speaker": "I", "text": "Sie erwähnten vorhin AtlasTrace. Wird das auch genutzt, um UX-Bugs anhand von Nutzungsdaten zu priorisieren?"}
{"ts": "162:21", "speaker": "E", "text": "Genau. Wir korrelieren Crash-Reports und Interaktionsmetriken. Wenn ein UX-Bug etwa nur in 0,2 % der Sessions auftritt, aber hohe Abbruchraten verursacht, bekommt er trotzdem eine hohe Priorität im Backlog."}
{"ts": "162:34", "speaker": "I", "text": "Wie fließt das ins Stakeholder-Reporting ein?"}
{"ts": "162:38", "speaker": "E", "text": "Wir haben ein monatliches UX-Radar-Dashboard. Dort sehen Stakeholder auf einen Blick KPIs wie Task Success Rate, Time on Task und Error Rate. Auffällige Werte werden mit Ticket-IDs und ggf. RFC-Referenzen verlinkt."}
{"ts": "162:51", "speaker": "I", "text": "Gab es im Pilot schon einen Fall, bei dem Sie ein Feature-Flag zurückgerollt haben, weil es die SLA gefährdet hat?"}
{"ts": "162:57", "speaker": "E", "text": "Ja, Flag 'new-sync-ui' im Sprint 14. In den Canary-Gruppen stieg die durchschnittliche Sync-Zeit um 40 %. Wir haben das Feature-Flag per FF-Manager deaktiviert und in RFC-212 dokumentiert, inklusive Risikobewertung."}
{"ts": "163:10", "speaker": "I", "text": "Interessant – wurde diese Entscheidung einstimmig getroffen?"}
{"ts": "163:14", "speaker": "E", "text": "Nicht ganz. Das DevOps-Team wollte erst weiter optimieren, aber die UX-Risiken bei Pilotkunden waren uns zu hoch. Letztlich hat das Steering Committee entschieden, mit 5:2 Stimmen den Rollback zu machen."}
{"ts": "163:26", "speaker": "I", "text": "Wie haben Sie diese Divergenz dokumentiert?"}
{"ts": "163:30", "speaker": "E", "text": "Im Decision Log des Projekts P-ATL, Eintrag DL-058. Dort sind Stimmen, Argumente und die Verweise auf die relevanten Tickets – u. a. MOB-8891 und UX-342 – aufgeführt."}
{"ts": "163:40", "speaker": "I", "text": "Letzte Frage: Gibt es Lessons Learned aus diesem Fall für den zukünftigen Umgang mit Feature-Flags?"}
{"ts": "163:46", "speaker": "E", "text": "Ja, wir haben in RB-MOB-033 'Feature Flag UX Evaluation' ergänzt, dass jede UI-relevante Änderung vor Full-Rollout mindestens 72 Stunden in einer repräsentativen Pilotgruppe getestet werden muss, mit kontinuierlichem SLA-Monitoring."}
{"ts": "163:36", "speaker": "I", "text": "Bevor wir ins Detail gehen – können Sie bitte noch einmal die Lessons Learned aus der letzten Pilotwoche zusammenfassen? Mich interessiert, ob sich im UX-Design etwas Grundlegendes geändert hat."}
{"ts": "163:42", "speaker": "E", "text": "Ja, wir haben festgestellt, dass unsere initiale Annahme zur Button-Platzierung in der Atlas Mobile Navigation nicht optimal war. Basierend auf Heatmap-Daten aus der Pilotwoche haben wir das Layout leicht angepasst, wobei wir die DS-ATLAS v2 Tokenized Components beibehalten haben, um Konsistenz zu sichern."}
{"ts": "163:49", "speaker": "I", "text": "Gab es dazu ein formales Change-Request-Dokument oder lief das eher ad hoc?"}
{"ts": "163:55", "speaker": "E", "text": "Es gab ein formales CR-Log unter CR-ATL-147, abgestimmt mit dem UX-Board. Wir haben den Change gleichzeitig mit einem Feature Flag versehen, um A/B-Tests fahren zu können und negative Auswirkungen schnell zu erkennen."}
{"ts": "164:01", "speaker": "I", "text": "Und wie evaluieren Sie die Performance dieser Änderung während der Offline-Phasen?"}
{"ts": "164:07", "speaker": "E", "text": "Wir haben die Anpassung auch in unserem Offline-Sync Testset aufgenommen. Die Runbook-Sequenz RB-MOB-021 sieht vor, dass jede UI-Änderung gegen simulierte Netzwerkunterbrechungen getestet wird, um Crash Loops zu vermeiden. Dadurch konnten wir bestätigten, dass die neue Position keinen Einfluss auf die Sync-Stabilität hat."}
{"ts": "164:14", "speaker": "I", "text": "Das klingt strukturiert. Hat sich durch POL-QA-014 etwas an Ihrer Dokumentation geändert?"}
{"ts": "164:20", "speaker": "E", "text": "POL-QA-014 verlangt, dass jede UX-Anforderung mit mindestens einem Testfall in unserem Traceability-Tool verknüpft ist. Wir haben deshalb die neue Navigationsänderung im Testfall TF-UX-092 erfasst und direkt im Jira-Board mit dem CR verlinkt."}
{"ts": "164:28", "speaker": "I", "text": "Wie haben Stakeholder auf diese kurzfristige Änderung reagiert?"}
{"ts": "164:34", "speaker": "E", "text": "Die Produktseite war zunächst skeptisch, weil die Änderung mitten im Pilotlauf kam. Wir haben in RFC-ATL-FF12 dokumentiert, dass das Risiko minimal ist und per Feature Flag jederzeit zurückgerollt werden kann. Das hat die Akzeptanz erhöht."}
{"ts": "164:41", "speaker": "I", "text": "Gab es während des Rollouts unter Flag irgendwelche negativen Signale?"}
{"ts": "164:46", "speaker": "E", "text": "Nur marginale: In einer Region mit lückenhafter Netzabdeckung gab es Meldungen zu verzögerten Button-Reaktionen, was wir auf die lokale Device-Performance zurückführen konnten. Im SLA-Check für Offline-Funktionalität (SLO-Offline-95%) lagen wir aber weiter im grünen Bereich."}
{"ts": "164:54", "speaker": "I", "text": "Interessant. Planen Sie, diese Erkenntnisse in die finale Produktversion zu übernehmen?"}
{"ts": "165:00", "speaker": "E", "text": "Ja, wir werden die Navigation so belassen, aber zusätzlich ein Micro-Interaction-Feedback implementieren, das per DS-ATLAS v2 Token konfigurierbar ist. Das wird ebenfalls unter einem Feature Flag laufen, damit wir es gezielt in Märkten ausrollen können."}
{"ts": "165:07", "speaker": "I", "text": "Und sehen Sie dabei Risiken?"}
{"ts": "165:12", "speaker": "E", "text": "Das Hauptrisiko liegt in der höheren Komplexität der Feature-Flag-Matrix. Wir müssen sicherstellen, dass QA die Kombinationen testet, sonst könnten unerkannte Konflikte entstehen. In RFC-ATL-RSK03 haben wir das Risiko beschrieben und Teststrategien vorgeschlagen, um es zu mitigieren."}
{"ts": "165:08", "speaker": "I", "text": "Lassen Sie uns noch mal auf die SLAs für Offline-Funktionalität eingehen – wie genau sind die in den Pilotbetrieb von Atlas Mobile eingebettet?"}
{"ts": "165:14", "speaker": "E", "text": "Wir haben im SLA-Dokument MOB-SLA-005 festgelegt, dass eine Offline-Session mindestens 48 Stunden Daten konsistent halten muss, bevor ein Sync-Versuch forciert wird. Diese Vorgabe ist direkt im Sync-Manager implementiert und wird über unsere QA-Suites automatisiert geprüft."}
{"ts": "165:25", "speaker": "I", "text": "Und wie messen Sie im laufenden Betrieb, ob diese 48 Stunden eingehalten werden?"}
{"ts": "165:31", "speaker": "E", "text": "Wir loggen jeden Offline-Zyklus mit Timestamp und Checksumme in das Telemetrie-Modul. Ausgewertet wird das per wöchentlichem Report aus unserem internen Monitoring-Tool 'NovEye'. Abweichungen triggern ein Ticket im Tracker mit Prio 'P1-UX'."}
{"ts": "165:44", "speaker": "I", "text": "Gab es da schon signifikante Abweichungen im Pilot?"}
{"ts": "165:49", "speaker": "E", "text": "Einmal, im Testlauf bei schwankendem Mobilfunknetz, hat das Delta-Merge-Modul einen Konflikt nicht korrekt markiert. Wir haben das als Incident INC-MOB-337 dokumentiert und per Hotfix in Build 0.9.14 behoben."}
{"ts": "165:59", "speaker": "I", "text": "Kommen wir zu den UX-Metriken: Sie hatten mal Heatmaps erwähnt – sind die in der Pilotphase schon produktiv?"}
{"ts": "166:04", "speaker": "E", "text": "Ja, für ausgewählte Testnutzer. Wir setzen ein internes Modul ein, das Klickpfade und Scrolltiefe erfasst. Ziel ist es, in Kombination mit Fehler-Logs zu sehen, ob z. B. eine UI-Änderung aus DS-ATLAS v2 zu längeren Suchzeiten führt."}
{"ts": "166:16", "speaker": "I", "text": "Und die Feature Flags spielen hier rein, richtig?"}
{"ts": "166:20", "speaker": "E", "text": "Genau. Wir können Heatmap-Daten segmentieren nach Flag-Status. So erkennen wir, ob ein neues Token-Set aus DS-ATLAS v2 die Interaktion verbessert oder verschlechtert. Das ist eine Kernverzahnung zwischen Design-System und QA-Auswertung."}
{"ts": "166:33", "speaker": "I", "text": "Wie gehen Sie mit UX-Risiken um, wenn die Datenlage widersprüchlich ist?"}
{"ts": "166:38", "speaker": "E", "text": "Wir dokumentieren das in einem RFC, z. B. RFC-UX-042, und legen es im wöchentlichen Stakeholder-Call vor. Dort entscheiden wir, ob das Flag aktiv bleibt oder zurückgerollt wird. Das Risiko wird in der Projekt-Risikomatrix mit Eintrittswahrscheinlichkeit und Auswirkung eingetragen."}
{"ts": "166:51", "speaker": "I", "text": "Gab es zuletzt so eine Entscheidung?"}
{"ts": "166:55", "speaker": "E", "text": "Ja, bei der neuen Offline-Warnanzeige. Die Telemetrie zeigte bessere Aufklärungsraten, aber auch leicht erhöhte Absprungraten. Wir haben uns entschieden, das Feature zu behalten und die Warntexte in der nächsten Iteration anzupassen."}
{"ts": "167:07", "speaker": "I", "text": "Wie fließt das ins QA-Backlog ein?"}
{"ts": "167:11", "speaker": "E", "text": "Über POL-QA-014 wird ein Verweis vom RFC ins Jira-Board gesetzt, mit klarer Verknüpfung zu den relevanten Testfällen. So bleibt die Traceability auch bei späten UX-Änderungen gewährleistet."}
{"ts": "167:48", "speaker": "I", "text": "Lassen Sie uns noch einmal auf die Feature-Flags zurückkommen – speziell in der Pilotphase von Atlas Mobile. Gab es Fälle, wo ein Flag versehentlich länger aktiv blieb als vorgesehen?"}
{"ts": "168:02", "speaker": "E", "text": "Ja, tatsächlich. Beim Flag FF-UI-023 für ein neues Navigationsmuster haben wir die Deaktivierung um knapp zwei Sprints verpasst, weil in JIRA-Ticket MOB-4554 die Abhängigkeit zu einem QA-Runbook-Eintrag nicht sauber dokumentiert war."}
{"ts": "168:18", "speaker": "I", "text": "Und wie hat sich das auf die UX im Pilotbetrieb ausgewirkt?"}
{"ts": "168:27", "speaker": "E", "text": "Es kam zu Inkonsistenzen zwischen iOS und Android, weil DS-ATLAS v2 Tokenwerte schon übernommen wurden, das Flag aber die alte Komponentenversion noch lieferte. Die SLO für visuelle Konsistenz (95% Gleichheit laut POL-UX-006) wurde kurzzeitig unterschritten."}
{"ts": "168:46", "speaker": "I", "text": "Wie wurde das Problem erkannt – war das automatisiert oder durch Nutzerfeedback?"}
{"ts": "168:53", "speaker": "E", "text": "Eine Mischung. Unser nightly visual regression bot schlug Alarm (Build #2204), und parallel meldeten zwei Pilotkunden über das In-App-Feedback-Widget Abweichungen im Button-Layout."}
{"ts": "169:08", "speaker": "I", "text": "Zurück zu Offline-Sync und RB-MOB-021 – wie stellen Sie sicher, dass die Crash Loop Mitigation nicht selbst UX-Probleme erzeugt?"}
{"ts": "169:21", "speaker": "E", "text": "Wir haben in RB-MOB-021 einen UX-Hinweisblock ergänzt: Bei drei aufeinanderfolgenden Abstürzen wird der Sync-Interval verdoppelt und ein dezenter Hinweis im Statusbereich eingeblendet, um Nutzer zu informieren, ohne sie zu verunsichern."}
{"ts": "169:41", "speaker": "I", "text": "Gab es Tests, bei denen diese Schleife falsch ausgelöst wurde?"}
{"ts": "169:48", "speaker": "E", "text": "Ja, in Testlauf QA-MOB-88 hatte ein fehlerhaftes Mock-Backend permanent Timeouts geliefert. Das löste die Mitigation aus, obwohl die Live-API stabil war. Wir haben daraufhin im Runbook eine Prüfung gegen das Prod-Health-Endpoint ergänzt."}
{"ts": "170:07", "speaker": "I", "text": "Wie kommunizieren Sie solche Anpassungen an Stakeholder, die nicht tief in der Technik stecken?"}
{"ts": "170:14", "speaker": "E", "text": "Über ein kompaktes Change Summary im wöchentlichen Pilot-Report und ein ergänzendes RFC-Dokument (RFC-MOB-021-UX) mit einer Risiko-Matrix, die auch für Produktmanagement verständlich ist."}
{"ts": "170:31", "speaker": "I", "text": "Hatten Sie schon einmal den Fall, dass eine UX-Anpassung bewusst gegen eine technische Empfehlung umgesetzt wurde?"}
{"ts": "170:39", "speaker": "E", "text": "Ja, beim Offline-Login haben wir gegen die Dev-Empfehlung entschieden, ein vereinfachtes Cache-Handling zu nutzen. Der technische Rat war komplexer, aber wir wollten laut SLO-UX-002 die Loginzeit unter 2 Sekunden halten. Dokumentiert in Ticket MOB-4720 mit Abwägung der Speicherlast vs. Speed."}
{"ts": "170:58", "speaker": "I", "text": "Wie wurde das Risiko später bewertet?"}
{"ts": "171:05", "speaker": "E", "text": "Nach vier Wochen Pilotbetrieb zeigte das Monitoring keine kritischen Speicherprobleme. Wir haben das Risiko von 'mittel' auf 'niedrig' herabgestuft und den Trade-off als Best Practice in POL-UX-Tradeoffs-001 aufgenommen."}
{"ts": "175:48", "speaker": "I", "text": "Sie hatten vorhin kurz die erweiterten SLOs für Offline Sync erwähnt. Können Sie bitte genauer erläutern, wie diese in den aktuellen Pilotbetrieb von Atlas Mobile integriert sind?"}
{"ts": "176:05", "speaker": "E", "text": "Ja, klar. Wir haben im Rahmen der Pilotphase ein separates SLA-Dokument erstellt – SLA-MOB-002 –, das neben den allgemeinen Verfügbarkeitszielen auch spezifische Werte für die Offline-Nutzung definiert. Zum Beispiel: mindestens 95% der Offline-Sync-Vorgänge müssen innerhalb von 3 Sekunden nach Wiederherstellung der Verbindung starten."}
{"ts": "176:28", "speaker": "I", "text": "Und wie wird das überwacht? Nutzen Sie da eher Synthetic Monitoring oder Real User Monitoring?"}
{"ts": "176:41", "speaker": "E", "text": "Wir kombinieren beides. Für die synthetischen Tests verwenden wir unser internes Tool MoniTrack, das stündlich Test-Syncs auslöst. Parallel dazu fließen Telemetriedaten aus der App direkt in die UX-Observability-Instanz von Novereon. So können wir Abweichungen schnell erkennen und im Runbook RB-MOB-021 reagieren."}
{"ts": "177:10", "speaker": "I", "text": "Das führt mich zu einem anderen Punkt: Wie stellen Sie sicher, dass bei einer Crash Loop Mitigation nicht die UX leidet?"}
{"ts": "177:24", "speaker": "E", "text": "Wir haben im RB-MOB-021 einen Abschnitt 'User Impact Mitigation'. Wenn der Crash Loop Handler greift, blendet die App ein leichtgewichtiges Offline-Dashboard ein. Das ist über DS-ATLAS v2 als Fallback-Komponente implementiert und wird nur mit einem speziellen Feature Flag 'ux_crash_fallback' aktiviert."}
{"ts": "177:52", "speaker": "I", "text": "Interessant. Gab es schon mal den Fall, dass dieses Feature Flag versehentlich aktiv war?"}
{"ts": "178:05", "speaker": "E", "text": "Ja, einmal im internen Staging, Ticket MOB-BUG-8472. Das führte dazu, dass Tester den regulären Homescreen nicht sahen. Wir haben danach in POL-QA-014 die Verknüpfung zwischen Flag-Änderung und QA-Review als Pflicht definiert."}
{"ts": "178:29", "speaker": "I", "text": "Okay, und wie kommunizieren Sie solche QA-Änderungen an das Stakeholder-Team, das ja nicht unbedingt technisch tief drin ist?"}
{"ts": "178:42", "speaker": "E", "text": "Wir bereiten eine vereinfachte Confluence-Seite mit Impact Maps und kurzen GIF-Demos vor. Zusätzlich gibt es ein zweiwöchentliches 'UX Risk Briefing', wo wir anhand von drei Kategorien – Severity, Likelihood, Detectability – die Risiken auch für Nicht-Techniker greifbar machen."}
{"ts": "179:08", "speaker": "I", "text": "Gab es jüngst eine Entscheidung, bei der Sie bewusst ein UX-Risiko in Kauf genommen haben?"}
{"ts": "179:21", "speaker": "E", "text": "Ja, im RFC-UX-044 haben wir beschlossen, den neuen Navigation Drawer trotz bekannter Performance-Bugs auszuliefern, um im Pilot Feedback zu sammeln. Wir haben das Risiko als 'Medium' eingestuft, weil laut MoniTrack die Ladezeiten nur 300ms über Soll lagen."}
{"ts": "179:45", "speaker": "I", "text": "Und wie wurde das dokumentiert?"}
{"ts": "179:57", "speaker": "E", "text": "Im RFC selbst sowie in JIRA, Link mit ID P-ATL-UX-DEC-2024-05. Dort sind die Abwägungen, die betroffenen Komponenten im DS-ATLAS v2 und die geplanten Hotfix-Tickets referenziert."}
{"ts": "180:18", "speaker": "I", "text": "Gab es daraufhin besondere QA-Maßnahmen?"}
{"ts": "180:31", "speaker": "E", "text": "Ja, wir haben ein temporäres 'Extended Beta' Flag gesetzt, das nur bei internen Testern sichtbar war. Zudem wurden die entsprechenden Testfälle in TestRail mit der UX-Anforderung verknüpft, um die Traceability zu POL-QA-014 sicherzustellen."}
{"ts": "183:48", "speaker": "I", "text": "Sie hatten vorhin RB-MOB-021 erwähnt – können Sie noch einmal detaillieren, wie genau diese Mitigation in den UX-Workflows sichtbar wird, vielleicht mit einem konkreten Nutzerbeispiel?"}
{"ts": "183:56", "speaker": "E", "text": "Ja, klar. Wenn zum Beispiel die App in eine Crash-Loop geraten würde, fängt RB-MOB-021 an, eine Recovery-UI einzublenden, die dem Nutzer proaktiv eine 'Wiederherstellen'-Option anbietet. Wir haben das so gestaltet, dass der Nutzer im Fehlerfall nicht nur eine generische Fehlermeldung sieht, sondern konkrete Handlungsoptionen. Das Testen dieses Flows ist in POL-QA-014 als Pflicht-Testfall verankert."}
{"ts": "184:15", "speaker": "I", "text": "Und wie wird dabei sichergestellt, dass dieser Recovery-Dialog nicht wiederum mit einem Feature-Flag kollidiert?"}
{"ts": "184:22", "speaker": "E", "text": "Wir haben für solche kritischen UX-Elemente sogenannte 'Bypass-Flags'. In der Feature-Flag-Konfiguration ist dokumentiert – siehe Ticket UX-FLG-118 – dass der Recovery-Dialog niemals deaktiviert werden darf. Diese Regel ist sowohl in unserem Flag-Management-Tool als auch in der Runbook-Checkliste RB-FLG-002 hinterlegt."}
{"ts": "184:42", "speaker": "I", "text": "Sie sprechen die Runbooks an – pflegen Sie diese synchron mit Ihren Design-System-Versionen?"}
{"ts": "184:50", "speaker": "E", "text": "Ja, jedes Release von DS-ATLAS v2 triggert ein Review aller relevanten Runbooks. Wenn z. B. Token-Variablen angepasst werden, prüfen wir, ob die in RB-MOB-021 beschriebenen UI-Elemente farblich oder typografisch angepasst werden müssen, damit sie konsistent bleiben. Das ist Teil des DS-RUN-Checklist-Punkts 7."}
{"ts": "185:12", "speaker": "I", "text": "Gab es Situationen, in denen das nicht rechtzeitig passiert ist?"}
{"ts": "185:18", "speaker": "E", "text": "Einmal, ja. In Sprint 42 haben wir eine neue Farbpalette eingeführt, aber das Recovery-UI übernahm noch die alten Tokens. Dadurch kam es zu einem Accessibility-Verstoß, den uns ein Beta-Nutzer meldete. Wir haben daraus gelernt und eine automatisierte Prüfung in unsere CI-Pipeline eingebaut."}
{"ts": "185:39", "speaker": "I", "text": "Wie reagieren Sie in solchen Fällen gegenüber Stakeholdern, gerade wenn Accessibility verletzt wird?"}
{"ts": "185:46", "speaker": "E", "text": "Wir nutzen ein standardisiertes Incident-Update-Template aus POL-COM-005. Darin dokumentieren wir Ursache, Impact, Sofortmaßnahmen und langfristige Prävention. Das geht direkt an Product Owner und Compliance-Beauftragte, damit sie sehen, dass wir proaktiv handeln."}
{"ts": "186:05", "speaker": "I", "text": "Gab es schon mal die Entscheidung, ein UX-Feature zurückzurollen, obwohl technisch alles stabil war?"}
{"ts": "186:12", "speaker": "E", "text": "Ja, im Fall von Feature 'SmartSync Indicator'. Technisch lief der Indikator sauber, aber Nutzer fanden ihn verwirrend, weil er zu oft flackerte. In RFC-UX-092 haben wir dokumentiert, dass wir den Rollback machen, um die Nutzererfahrung zu schützen, obwohl der Code fehlerfrei war."}
{"ts": "186:31", "speaker": "I", "text": "Wie bewerten Sie in so einer Situation das Risiko, vor allem im Hinblick auf die Pilotphase?"}
{"ts": "186:38", "speaker": "E", "text": "In der Pilotphase ist der Toleranzrahmen für UX-Experimente größer, aber wir haben ein Risiko-Score-Modell aus POL-RSK-010. Dort fließen Faktoren wie 'User Confusion Impact' und 'Potential SLA Breach' ein. Beim SmartSync-Indikator war der Score hoch, weil es die Wahrnehmung der Offline-Sync-Stabilität verfälschte."}
{"ts": "186:59", "speaker": "I", "text": "Das führt mich zur letzten Frage: Wie dokumentieren Sie finale Trade-offs zwischen UX und Technik, damit sie später nachvollziehbar bleiben?"}
{"ts": "187:06", "speaker": "E", "text": "Wir führen einen 'Decision Log' im Confluence-Bereich P-ATL/DOC-DEC. Jede Entscheidung bekommt eine ID, z. B. DEC-2023-017, verlinkt auf zugehörige RFCs, Testprotokolle und Stakeholder-Feedback. So können wir auch in Audits belegen, warum wir eine technische Empfehlung zugunsten einer besseren UX ignoriert oder umgekehrt gehandelt haben."}
{"ts": "190:48", "speaker": "I", "text": "Lassen Sie uns noch einmal konkret auf die letzte Phase der Pilotierung eingehen: Welche finalen UX-Entscheidungen haben Sie vor dem Go-Live getroffen?"}
{"ts": "191:02", "speaker": "E", "text": "Kurz vor dem Go-Live haben wir zwei UI-Muster geändert: den Offline-Status-Indikator von reinem Icon zu Icon plus Text, basierend auf den Usability-Tests aus Ticket UX-4421, und wir haben die Ladeanimation aus DS-ATLAS v2 minimal beschleunigt, um die gefühlte Performance um etwa 300 ms zu verbessern."}
{"ts": "191:21", "speaker": "I", "text": "Gab es Widerstände gegen diese Anpassungen seitens der QA oder der Entwicklung?"}
{"ts": "191:35", "speaker": "E", "text": "Ja, QA hat zunächst gewarnt, dass eine Änderung der Ladeanimation kurz vor Release gegen POL-QA-014 verstoßen könnte, weil die Visual Regression Tests nicht vollständig durchliefen. Wir haben dann einen Fast-Track gemäß Ausnahme-Runbook RB-QA-007 beantragt."}
{"ts": "191:56", "speaker": "I", "text": "Und wie haben Sie das Risiko dieser Ausnahme dokumentiert?"}
{"ts": "192:09", "speaker": "E", "text": "Wir haben in RFC-ATL-57 die Entscheidung, die Tests nur teilweise nachzuziehen, klar als temporären Trade-off beschrieben und ein Backout-Kriterium definiert: Sollte die Crash-Rate im Bereich 'Splash Screen' laut SLO SLO-MOB-003 um mehr als 0,5 % steigen, rollen wir zurück."}
{"ts": "192:32", "speaker": "I", "text": "Gab es nach dem Go-Live Anzeichen, dass dieser Fall eintreten könnte?"}
{"ts": "192:44", "speaker": "E", "text": "In den ersten 48 Stunden nein. Die Crashlytics-Daten lagen bei 0,18 % im relevanten Screen, also deutlich unter dem Grenzwert. Wir haben das Monitoring-Flag 'ATL_SPLASH_WATCH' aktiviert gelassen."}
